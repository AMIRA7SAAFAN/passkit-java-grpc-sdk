// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/analytics/a_rpc.proto

package com.passkit.grpc.Analytics;

public final class ARpc {
  private ARpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030io/analytics/a_rpc.proto\022\tanalytics\032\034g" +
      "oogle/api/annotations.proto\032,protoc-gen-" +
      "swagger/options/annotations.proto\032\031io/co" +
      "mmon/reporting.proto2\346\001\n\tAnalytics\022\330\001\n\014g" +
      "etAnalytics\022\024.io.AnalyticsRequest\032\025.io.A" +
      "nalyticsResponse\"\232\001\202\323\344\223\002\026\022\024/analytics/{c" +
      "lassId}\222A{\n\tAnalytics\022\rGet Analytics\032\033Re" +
      "trieves an analytics dataJ\"\n\003403\022\033\n\031User" +
      " lacks authorization.J\036\n\003404\022\027\n\025Record w" +
      "as not found.B\200\003\n\032com.passkit.grpc.Analy" +
      "ticsZ.stash.passkit.com/io/model/sdk/go/" +
      "io/analytics\252\002\013PKAnalytics\222A\242\002\022\370\001\n\025PassK" +
      "it Analytics API\022_The PassKit Analytics " +
      "API lets you track the performance of Ap" +
      "ple Wallet and Google Pay passes.\0328https" +
      "://passkit.com/legal/terms-of-subscripti" +
      "on-service/\"?\n\017PassKit Support\022\027https://" +
      "docs.passkit.io\032\023support@passkit.com2\0030." +
      "1*\001\0022\020application/json:\020application/json" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor(),
          com.passkit.grpc.Reporting.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_swagger.options.Annotations.openapiv2Operation);
    registry.add(grpc.gateway.protoc_gen_swagger.options.Annotations.openapiv2Swagger);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor();
    com.passkit.grpc.Reporting.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
