// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/member/a_rpc.proto

package com.passkit.grpc.Members;

public final class ARpc {
  private ARpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025io/member/a_rpc.proto\022\007members\032\034google" +
      "/api/annotations.proto\032\033google/protobuf/" +
      "empty.proto\032\036io/common/common_objects.pr" +
      "oto\032\034io/common/distribution.proto\032\027io/co" +
      "mmon/message.proto\032\032io/common/pagination" +
      ".proto\032\026io/common/filter.proto\032\035io/membe" +
      "r/member_events.proto\032\026io/member/member." +
      "proto\032\027io/member/program.proto\032\024io/membe" +
      "r/tier.proto\032.protoc-gen-openapiv2/optio" +
      "ns/annotations.proto2\265K\n\007Members\022}\n\rcrea" +
      "teProgram\022\020.members.Program\032\006.io.Id\"R\202\323\344" +
      "\223\002\025\"\020/members/program:\001*\222A4\n\010Programs\022\016C" +
      "reate Program\032\030Creates a program record\022" +
      "\221\001\n\rupdateProgram\022\020.members.Program\032\020.me" +
      "mbers.Program\"\\\202\323\344\223\002\025\032\020/members/program:" +
      "\001*\222A>\n\010Programs\022\016Update Program\032\"Updates" +
      " an existing program record\022\200\001\n\ngetProgr" +
      "am\022\006.io.Id\032\020.members.Program\"X\202\323\344\223\002\027\022\025/m" +
      "embers/program/{id}\222A8\n\010Programs\022\013Get Pr" +
      "ogram\032\037Gets an existing program record\022\222" +
      "\001\n\013copyProgram\022\033.members.ProgramCopyRequ" +
      "est\032\006.io.Id\"^\202\323\344\223\002\032\"\025/members/program/co" +
      "py:\001*\222A;\n\010Programs\022\014Copy Program\032!Copies" +
      " an existing program record\022\224\002\n\rdeletePr" +
      "ogram\022\006.io.Id\032\026.google.protobuf.Empty\"\342\001" +
      "\202\323\344\223\002\032*\025/members/program/{id}:\001*\222A\276\001\n\010Pr" +
      "ograms\022\016Delete Program\032\241\001Deletes an exis" +
      "ting program record. Deleting a program " +
      "results in all tiers, and members undern" +
      "eath it being invalidated and removed. N" +
      "eeds to be used with care.\022\300\001\n\026listProgr" +
      "amsDeprecated\022\016.io.Pagination\032\020.members." +
      "Program\"\201\001\202\323\344\223\002\023\022\021/members/programs\222Ae\n\010" +
      "Programs\022\032List Programs [DEPRECATED]\032=[D" +
      "EPRECATED: OR operator is not supported]" +
      " Lists all programs0\001\022\361\003\n\014listPrograms\022\013" +
      ".io.Filters\032\020.members.Program\"\277\003\202\323\344\223\002\033\"\026" +
      "/members/programs/list:\001*\222A\232\003\n\010Programs\022" +
      "\rList Programs\032\376\002Lists all programs\n\n<sp" +
      "an style=\"font-weight:bold\">About filter" +
      " field names, operators and sample paylo" +
      "ads:</span> <a target=\"_blank\" href=\"htt" +
      "ps://help.passkit.com/en/articles/413375" +
      "7-membership-protocol-filtering-listing-" +
      "and-counting-by-api#filter-programs\">htt" +
      "ps://help.passkit.com/en/articles/413375" +
      "7-membership-protocol-filtering-listing-" +
      "and-counting-by-api#filter-programs</a>0" +
      "\001\022h\n\ncreateTier\022\r.members.Tier\032\006.io.Id\"C" +
      "\202\323\344\223\002\022\"\r/members/tier:\001*\222A(\n\005Tiers\022\013Crea" +
      "te Tier\032\022Creates a new tier\022v\n\nupdateTie" +
      "r\022\r.members.Tier\032\r.members.Tier\"J\202\323\344\223\002\022\032" +
      "\r/members/tier:\001*\222A/\n\005Tiers\022\013Update Tier" +
      "\032\031Updates a tier by tier id\022\227\001\n\007getTier\022" +
      "\031.members.TierRequestInput\032\r.members.Tie" +
      "r\"b\202\323\344\223\002$\022\"/members/tier/{programId}/{ti" +
      "erId}\222A5\n\005Tiers\022\010Get Tier\032\"Get a tier by" +
      " program and tier ids\022\326\001\n\ndeleteTier\022\031.m" +
      "embers.TierRequestInput\032\026.google.protobu" +
      "f.Empty\"\224\001\202\323\344\223\002\'*\"/members/tier/{program" +
      "Id}/{tierId}:\001*\222Ad\n\005Tiers\022\013Delete Tier\032N" +
      "Deletes a tier and members who belong to" +
      " the tier. Needs to be used with care.\022\275" +
      "\001\n\023listTiersDeprecated\022\036.members.ListReq" +
      "uestDeprecated\032\r.members.Tier\"u\202\323\344\223\002\020\022\016/" +
      "members/tiers\222A\\\n\005Tiers\022\027List Tiers [DEP" +
      "RECATED]\032:[DEPRECATED: OR operator is no" +
      "t supported] Lists all tiers0\001\022\342\003\n\tlistT" +
      "iers\022\024.members.ListRequest\032\r.members.Tie" +
      "r\"\255\003\202\323\344\223\002\030\"\023/members/tiers/list:\001*\222A\213\003\n\005" +
      "Tiers\022\nList Tiers\032\365\002Lists all tiers\n\n<sp" +
      "an style=\"font-weight:bold\">About filter" +
      " field names, operators and sample paylo" +
      "ads:</span> <a target=\"_blank\" href=\"htt" +
      "ps://help.passkit.com/en/articles/413375" +
      "7-membership-protocol-filtering-listing-" +
      "and-counting-by-api#filter-tiers\">https:" +
      "//help.passkit.com/en/articles/4133757-m" +
      "embership-protocol-filtering-listing-and" +
      "-counting-by-api#filter-tiers</a>0\001\022u\n\013e" +
      "nrolMember\022\017.members.Member\032\006.io.Id\"M\202\323\344" +
      "\223\002\024\"\017/members/member:\001*\222A0\n\007Members\022\020Enr" +
      "ol new Member\032\023Enrols a new member\022\276\001\n\021e" +
      "nrolMemberPublic\022\017.members.Member\032\006.io.I" +
      "d\"\217\001\202\323\344\223\002\033\"\026/members/member/public:\001*\222Ak" +
      "\n\007Members\022\031Enrol new Member (public)\032EEn" +
      "rols a new member into the default tier " +
      "of a program that is public\022\236\001\n\023getMembe" +
      "rRecordById\022\006.io.Id\032\017.members.Member\"n\202\323" +
      "\344\223\002\031\022\027/members/member/id/{id}\222AL\n\007Member" +
      "s\022\037Get member record by PassKit ID\032 Gets" +
      " member record by PassKit ID\022\347\001\n\033getMemb" +
      "erRecordByExternalId\022(.members.MemberRec" +
      "ordByExternalIdRequest\032\017.members.Member\"" +
      "\214\001\202\323\344\223\0025\0223/members/member/externalId/{pr" +
      "ogramId}/{externalId}\222AN\n\007Members\022 Get m" +
      "ember record by External ID\032!Gets member" +
      " record by External ID\022\360\001\n\rcheckInMember" +
      "\022 .members.MemberCheckInOutRequest\032\024.mem" +
      "bers.MemberEvent\"\246\001\202\323\344\223\002\034\"\027/members/memb" +
      "er/checkIn:\001*\222A\200\001\n\007Members\022\017Check in mem" +
      "ber\032dChecks in a member by either intern" +
      "al PassKit ID or External ID. Returns th" +
      "e latest 5 member events.\022\364\001\n\016checkOutMe" +
      "mber\022 .members.MemberCheckInOutRequest\032\024" +
      ".members.MemberEvent\"\251\001\202\323\344\223\002\035\"\030/members/" +
      "member/checkOut:\001*\222A\202\001\n\007Members\022\020Check o" +
      "ut member\032eChecks out a member by either" +
      " internal PassKit ID or External ID. Ret" +
      "urns the latest 5 member events.\022\204\002\n\025lis" +
      "tMembersDeprecated\022\036.members.ListRequest" +
      "Deprecated\032\017.members.Member\"\267\001\202\323\344\223\002\"\022 /m" +
      "embers/member/list/{programId}\222A\213\001\n\007Memb" +
      "ers\022\031List members [DEPRECATED]\032e[DEPRECA" +
      "TED: OR operator is not supported] List " +
      "all members for a given segment. Support" +
      "s pagination.0\001\022\246\004\n\013listMembers\022\024.member" +
      "s.ListRequest\032\017.members.Member\"\355\003\202\323\344\223\002%\"" +
      " /members/member/list/{programId}:\001*\222A\276\003" +
      "\n\007Members\022\014List members\032\244\003List all membe" +
      "rs for a given segment. Supports paginat" +
      "ion.\n\n<span style=\"font-weight:bold\">Abo" +
      "ut filter field names, operators and sam" +
      "ple payloads:</span> <a target=\"_blank\" " +
      "href=\"https://help.passkit.com/en/articl" +
      "es/4133757-membership-protocol-filtering" +
      "-listing-and-counting-by-api#filter-memb" +
      "ers\">https://help.passkit.com/en/article" +
      "s/4133757-membership-protocol-filtering-" +
      "listing-and-counting-by-api#filter-membe" +
      "rs</a>0\001\022\233\001\n\014updateMember\022\017.members.Memb" +
      "er\032\006.io.Id\"r\202\323\344\223\002\024\032\017/members/member:\001*\222A" +
      "U\n\007Members\022\rUpdate member\032;Updates membe" +
      "r by either internal PassKit ID or Exter" +
      "nal ID\022\346\001\n\nearnPoints\022\036.members.EarnBurn" +
      "PointsRequest\032\025.members.MemberPoints\"\240\001\202" +
      "\323\344\223\002 \032\033/members/member/points/earn:\001*\222Aw" +
      "\n\007Members\022\013Earn points\032_Earns points for" +
      " a member (identified by PassKit ID or E" +
      "xternal ID). Adds the amounts provided.\022" +
      "\350\001\n\nburnPoints\022\036.members.EarnBurnPointsR" +
      "equest\032\025.members.MemberPoints\"\242\001\202\323\344\223\002 \032\033" +
      "/members/member/points/burn:\001*\222Ay\n\007Membe" +
      "rs\022\013Burn points\032aBurn points for a membe" +
      "r (identified by PassKit ID or External " +
      "ID). Deducts the amounts provided.\022\334\001\n\ts" +
      "etPoints\022\031.members.SetPointsRequest\032\025.me" +
      "mbers.MemberPoints\"\234\001\202\323\344\223\002\037\032\032/members/me" +
      "mber/points/set:\001*\222At\n\007Members\022\nSet poin" +
      "ts\032]Set points for a member (identified " +
      "by PassKit ID or External ID). Sets the " +
      "amounts provided.\022\266\001\n\026updateMembersBySeg" +
      "ment\022\035.members.MemberSegmentRequest\032\026.go" +
      "ogle.protobuf.Empty\"e\202\323\344\223\002\034\032\027/members/me" +
      "mber/segment:\001*\222A@\n\007Members\022\031Update memb" +
      "ers by segment\032\032Updates members by segme" +
      "nt\022\266\001\n\026deleteMembersBySegment\022\035.members." +
      "MemberSegmentRequest\032\026.google.protobuf.E" +
      "mpty\"e\202\323\344\223\002\034*\027/members/member/segment:\001*" +
      "\222A@\n\007Members\022\031Delete members by segment\032" +
      "\032Deletes members by segment\022\253\001\n\014deleteMe" +
      "mber\022\017.members.Member\032\026.google.protobuf." +
      "Empty\"r\202\323\344\223\002\024*\017/members/member:\001*\222AU\n\007Me" +
      "mbers\022\rDelete member\032;Deletes member by " +
      "either internal PassKit ID or External I" +
      "D\022\261\002\n\026countMembersDeprecated\022\036.members.L" +
      "istRequestDeprecated\032\t.io.Count\"\353\001\202\323\344\223\002\034" +
      "\022\032/members/count/{programId}\222A\305\001\n\007Member" +
      "s\022#Count Filtered Members [DEPRECATED]\032Q" +
      "[DEPRECATED: OR operator is not supporte" +
      "d] Retrieves a count of filtered members" +
      ".J\"\n\003403\022\033\n\031User lacks authorization.J\036\n" +
      "\003404\022\027\n\025Record was not found.\022\323\004\n\014countM" +
      "embers\022\024.members.ListRequest\032\t.io.Count\"" +
      "\241\004\202\323\344\223\002\037\"\032/members/count/{programId}:\001*\222" +
      "A\370\003\n\007Members\022\026Count Filtered Members\032\220\003R" +
      "etrieves a count of filtered members.\n\n<" +
      "span style=\"font-weight:bold\">About filt" +
      "er field names, operators and sample pay" +
      "loads:</span> <a target=\"_blank\" href=\"h" +
      "ttps://help.passkit.com/en/articles/4133" +
      "757-membership-protocol-filtering-listin" +
      "g-and-counting-by-api#filter-members\">ht" +
      "tps://help.passkit.com/en/articles/41337" +
      "57-membership-protocol-filtering-listing" +
      "-and-counting-by-api#filter-members</a>J" +
      "\"\n\003403\022\033\n\031User lacks authorization.J\036\n\0034" +
      "04\022\027\n\025Record was not found.\022\322\001\n\032getMessa" +
      "geHistoryForMember\022\016.io.Pagination\032\013.io." +
      "Message\"\224\001\202\323\344\223\002\032\022\030/members/member/messag" +
      "es\222Aq\n\007Members\022\033Get members message hist" +
      "ory\032IGet all the message that have been " +
      "sent to a member. Supports pagination.0\001" +
      "\022\332\001\n\025getMetaKeysForProgram\022\006.io.Id\032\013.io." +
      "Strings\"\253\001\202\323\344\223\002\033\022\031/members/member/meta/{" +
      "id}\222A\206\001\n\007Members\022\033Get Meta Keys for a Pr" +
      "ogram\032^Returns a list of distinct meta f" +
      "ield keys. Can be used for building filt" +
      "ers / table headings.\022\263\002\n\022renewMembersEx" +
      "piry\022\034.members.UpdateExpiryRequest\032\t.io." +
      "Count\"\363\001\202\323\344\223\002\033\032\026/members/member/expiry:\001" +
      "*\222A\316\001\n\007Members\022\032Batch update member expi" +
      "ry\032\246\001Batch updates expiry of ALL active " +
      "members belong to the tier. Should only " +
      "be used when you want to update ALL the " +
      "expiry date for all member records in a " +
      "given tier.\022\242\001\n\022updateMemberExpiry\022\025.mem" +
      "bers.MemberExpiry\032\006.io.Id\"m\202\323\344\223\002!\032\034/memb" +
      "ers/member/updateExpiry:\001*\222AC\n\007Members\022\024" +
      "Update member expiry\032\"Updates expiry of " +
      "a single member.\022\265\001\n\021countMemberEvents\022\024" +
      ".members.ListRequest\032\t.io.Count\"\177\202\323\344\223\002.\"" +
      ")/members/program/count/events/{programI" +
      "d}:\001*\222AH\n\010Programs\022\023Count member events\032" +
      "\'Counts all members events for a program" +
      "\022\275\001\n\020listMemberEvents\022\024.members.ListRequ" +
      "est\032\024.members.MemberEvent\"{\202\323\344\223\002-\"(/memb" +
      "ers/program/list/events/{programId}:\001*\222A" +
      "E\n\010Programs\022\022List member events\032%List al" +
      "l members events for a program0\001\022\220\002\n get" +
      "MemberEventMetaKeysForProgram\022\006.io.Id\032\013." +
      "io.Strings\"\326\001\202\323\344\223\002\"\022 /members/member/eve" +
      "nts/meta/{id}\222A\252\001\n\010Programs\022(Get Member " +
      "Event Meta Keys for a Program\032tReturns a" +
      " list of distinct meta field keys for th" +
      "e member events. Can be used for buildin" +
      "g filters / table headings.\022\250\001\n\023listEven" +
      "tsForMember\022\006.io.Id\032\024.members.MemberEven" +
      "t\"q\202\323\344\223\002%\" /members/member/list/events/{" +
      "id}:\001*\222AC\n\007Members\022\022List member events\032$" +
      "List all members events for a member0\001\022\314" +
      "\001\n\022deleteMemberEvents\022\024.members.ListRequ" +
      "est\032\026.google.protobuf.Empty\"\207\001\202\323\344\223\002(*#/m" +
      "embers/program/events/{programId}:\001*\222AV\n" +
      "\010Programs\022\025Deletes member events\0323Delete" +
      "s all members events for a program and f" +
      "ilter\022\264\001\n\025deleteEventsForMember\022\006.io.Id\032" +
      "\026.google.protobuf.Empty\"{\202\323\344\223\002 *\033/member" +
      "s/member/events/{id}:\001*\222AR\n\007Members\022\037Del" +
      "ete member events for member\032&Delete all" +
      " members events for a member\022\262\001\n\021deleteM" +
      "emberEvent\022\006.io.Id\032\026.google.protobuf.Emp" +
      "ty\"}\202\323\344\223\002#*\036/members/member/events/id/{i" +
      "d}:\001*\222AQ\n\007Members\022\"Deletes an individual" +
      " member event\032\"Deletes an individual mem" +
      "ber event\022\340\001\n\023getProgramEnrolment\022\006.io.I" +
      "d\032\021.io.EnrolmentUrls\"\255\001\202\323\344\223\002!\022\037/members/" +
      "enrol/url/program/{id}\222A\202\001\n\016Enrolment Ur" +
      "ls\022\036Get Program Enrolment Page URL\032PRetr" +
      "ieves enrolment page URL of the base tie" +
      "r and enrolment URLs for each tier .B\314\006\n" +
      "\030com.passkit.grpc.MembersZ,stash.passkit" +
      ".com/io/model/sdk/go/io/members\252\002\024PassKi" +
      "t.Grpc.Members\222A\351\005\022\206\002\n\023PassKit Members A" +
      "PI\022lThe PassKit Members API lets you man" +
      "age your membership programs and passes " +
      "for Apple Wallet and Google Pay.\0328https:" +
      "//passkit.com/legal/terms-of-subscriptio" +
      "n-service/\"?\n\017PassKit Support\022\027https://d" +
      "ocs.passkit.io\032\023support@passkit.com2\0061.0" +
      "-rc*\001\0022\020application/json:\020application/js" +
      "onR9\n\003200\0222\n(Returned when the request i" +
      "s successful.\022\006\n\004\232\002\001\007RP\n\003403\022I\nGReturned" +
      " when the user does not have permission " +
      "to access the resource.R;\n\003404\0224\n*Return" +
      "ed when the resource does not exist.\022\006\n\004" +
      "\232\002\001\007R<\n\003500\0225\n+Returned when there is an" +
      " unexpected error.\022\006\n\004\232\002\001\007R]\n\003503\022V\nTRet" +
      "urned when the user is being throttled. " +
      "Back off for a few ms and then try again" +
      ".Z>\n<\n\napiKeyAuth\022.\010\002\022\031JWT Authenticatio" +
      "n token.\032\rAuthorization \002b\020\n\016\n\napiKeyAut" +
      "h\022\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.passkit.grpc.CommonObjects.getDescriptor(),
          com.passkit.grpc.Distribution.getDescriptor(),
          com.passkit.grpc.MessageOuterClass.getDescriptor(),
          com.passkit.grpc.PaginationOuterClass.getDescriptor(),
          com.passkit.grpc.Filter.getDescriptor(),
          com.passkit.grpc.Members.MemberEventsOuterClass.getDescriptor(),
          com.passkit.grpc.Members.MemberOuterClass.getDescriptor(),
          com.passkit.grpc.Members.ProgramOuterClass.getDescriptor(),
          com.passkit.grpc.Members.TierOuterClass.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Operation);
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Swagger);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    com.passkit.grpc.CommonObjects.getDescriptor();
    com.passkit.grpc.Distribution.getDescriptor();
    com.passkit.grpc.MessageOuterClass.getDescriptor();
    com.passkit.grpc.PaginationOuterClass.getDescriptor();
    com.passkit.grpc.Filter.getDescriptor();
    com.passkit.grpc.Members.MemberEventsOuterClass.getDescriptor();
    com.passkit.grpc.Members.MemberOuterClass.getDescriptor();
    com.passkit.grpc.Members.ProgramOuterClass.getDescriptor();
    com.passkit.grpc.Members.TierOuterClass.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
