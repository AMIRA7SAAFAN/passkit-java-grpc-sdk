// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/raw/pass.proto

package com.passkit.grpc.Raw;

public final class PassOuterClass {
  private PassOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PassOrBuilder extends
      // @@protoc_insertion_point(interface_extends:raw.Pass)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The externalId.
     */
    java.lang.String getExternalId();
    /**
     * <pre>
     * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The bytes for externalId.
     */
    com.google.protobuf.ByteString
        getExternalIdBytes();

    /**
     * <pre>
     * The pass project id to issue this pass for.
     * </pre>
     *
     * <code>string passProjectId = 3;</code>
     * @return The passProjectId.
     */
    java.lang.String getPassProjectId();
    /**
     * <pre>
     * The pass project id to issue this pass for.
     * </pre>
     *
     * <code>string passProjectId = 3;</code>
     * @return The bytes for passProjectId.
     */
    com.google.protobuf.ByteString
        getPassProjectIdBytes();

    /**
     * <pre>
     * The ID of the template this pass is issued for.
     * </pre>
     *
     * <code>string passTemplateId = 4;</code>
     * @return The passTemplateId.
     */
    java.lang.String getPassTemplateId();
    /**
     * <pre>
     * The ID of the template this pass is issued for.
     * </pre>
     *
     * <code>string passTemplateId = 4;</code>
     * @return The bytes for passTemplateId.
     */
    com.google.protobuf.ByteString
        getPassTemplateIdBytes();

    /**
     * <pre>
     * Can contain personal details. Any data in the personalDetails object is stored encrypted.
     * </pre>
     *
     * <code>.io.Person personalDetails = 5;</code>
     * @return Whether the personalDetails field is set.
     */
    boolean hasPersonalDetails();
    /**
     * <pre>
     * Can contain personal details. Any data in the personalDetails object is stored encrypted.
     * </pre>
     *
     * <code>.io.Person personalDetails = 5;</code>
     * @return The personalDetails.
     */
    com.passkit.grpc.Personal.Person getPersonalDetails();
    /**
     * <pre>
     * Can contain personal details. Any data in the personalDetails object is stored encrypted.
     * </pre>
     *
     * <code>.io.Person personalDetails = 5;</code>
     */
    com.passkit.grpc.Personal.PersonOrBuilder getPersonalDetailsOrBuilder();

    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */
    int getDynamicDataCount();
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */
    boolean containsDynamicData(
        java.lang.String key);
    /**
     * Use {@link #getDynamicDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getDynamicData();
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getDynamicDataMap();
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */

    java.lang.String getDynamicDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */

    java.lang.String getDynamicDataOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Indicates if this pass is opted out to receive marketing promotions (defaults to false).
     * </pre>
     *
     * <code>bool optOut = 8;</code>
     * @return The optOut.
     */
    boolean getOptOut();

    /**
     * <pre>
     * Indicates if this pass is currently voided.
     * </pre>
     *
     * <code>bool isVoided = 9;</code>
     * @return The isVoided.
     */
    boolean getIsVoided();

    /**
     * <pre>
     * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
     * @return Whether the invalidateDate field is set.
     */
    boolean hasInvalidateDate();
    /**
     * <pre>
     * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
     * @return The invalidateDate.
     */
    com.google.protobuf.Timestamp getInvalidateDate();
    /**
     * <pre>
     * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
     */
    com.google.protobuf.TimestampOrBuilder getInvalidateDateOrBuilder();

    /**
     * <pre>
     * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
     * @return Whether the expiryDate field is set.
     */
    boolean hasExpiryDate();
    /**
     * <pre>
     * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
     * @return The expiryDate.
     */
    com.google.protobuf.Timestamp getExpiryDate();
    /**
     * <pre>
     * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
     */
    com.google.protobuf.TimestampOrBuilder getExpiryDateOrBuilder();

    /**
     * <pre>
     * Can hold optional pass customization fields like appLaunchURL and userData
     * </pre>
     *
     * <code>.io.PassOptions passOptions = 12;</code>
     * @return Whether the passOptions field is set.
     */
    boolean hasPassOptions();
    /**
     * <pre>
     * Can hold optional pass customization fields like appLaunchURL and userData
     * </pre>
     *
     * <code>.io.PassOptions passOptions = 12;</code>
     * @return The passOptions.
     */
    com.passkit.grpc.PassOuterClass.PassOptions getPassOptions();
    /**
     * <pre>
     * Can hold optional pass customization fields like appLaunchURL and userData
     * </pre>
     *
     * <code>.io.PassOptions passOptions = 12;</code>
     */
    com.passkit.grpc.PassOuterClass.PassOptionsOrBuilder getPassOptionsOrBuilder();

    /**
     * <pre>
     * Pass level overrides for proximity &amp; images.
     * </pre>
     *
     * <code>.io.PassOverrides passOverrides = 13;</code>
     * @return Whether the passOverrides field is set.
     */
    boolean hasPassOverrides();
    /**
     * <pre>
     * Pass level overrides for proximity &amp; images.
     * </pre>
     *
     * <code>.io.PassOverrides passOverrides = 13;</code>
     * @return The passOverrides.
     */
    com.passkit.grpc.PassOuterClass.PassOverrides getPassOverrides();
    /**
     * <pre>
     * Pass level overrides for proximity &amp; images.
     * </pre>
     *
     * <code>.io.PassOverrides passOverrides = 13;</code>
     */
    com.passkit.grpc.PassOuterClass.PassOverridesOrBuilder getPassOverridesOrBuilder();

    /**
     * <pre>
     * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
     * </pre>
     *
     * <code>.io.Metadata passMetaData = 14;</code>
     * @return Whether the passMetaData field is set.
     */
    boolean hasPassMetaData();
    /**
     * <pre>
     * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
     * </pre>
     *
     * <code>.io.Metadata passMetaData = 14;</code>
     * @return The passMetaData.
     */
    com.passkit.grpc.MetricsOuterClass.Metadata getPassMetaData();
    /**
     * <pre>
     * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
     * </pre>
     *
     * <code>.io.Metadata passMetaData = 14;</code>
     */
    com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder getPassMetaDataOrBuilder();

    /**
     * <pre>
     * The date the pass was created in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 15;</code>
     * @return Whether the created field is set.
     */
    boolean hasCreated();
    /**
     * <pre>
     * The date the pass was created in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 15;</code>
     * @return The created.
     */
    com.google.protobuf.Timestamp getCreated();
    /**
     * <pre>
     * The date the pass was created in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 15;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder();

    /**
     * <pre>
     * The date the pass was last updated in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 16;</code>
     * @return Whether the updated field is set.
     */
    boolean hasUpdated();
    /**
     * <pre>
     * The date the pass was last updated in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 16;</code>
     * @return The updated.
     */
    com.google.protobuf.Timestamp getUpdated();
    /**
     * <pre>
     * The date the pass was last updated in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 16;</code>
     */
    com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder();
  }
  /**
   * <pre>
   * The pass object
   * </pre>
   *
   * Protobuf type {@code raw.Pass}
   */
  public static final class Pass extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:raw.Pass)
      PassOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pass.newBuilder() to construct.
    private Pass(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pass() {
      id_ = "";
      externalId_ = "";
      passProjectId_ = "";
      passTemplateId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pass();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pass(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              externalId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              passProjectId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              passTemplateId_ = s;
              break;
            }
            case 42: {
              com.passkit.grpc.Personal.Person.Builder subBuilder = null;
              if (personalDetails_ != null) {
                subBuilder = personalDetails_.toBuilder();
              }
              personalDetails_ = input.readMessage(com.passkit.grpc.Personal.Person.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personalDetails_);
                personalDetails_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dynamicData_ = com.google.protobuf.MapField.newMapField(
                    DynamicDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              dynamicData__ = input.readMessage(
                  DynamicDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              dynamicData_.getMutableMap().put(
                  dynamicData__.getKey(), dynamicData__.getValue());
              break;
            }
            case 64: {

              optOut_ = input.readBool();
              break;
            }
            case 72: {

              isVoided_ = input.readBool();
              break;
            }
            case 82: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (invalidateDate_ != null) {
                subBuilder = invalidateDate_.toBuilder();
              }
              invalidateDate_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(invalidateDate_);
                invalidateDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (expiryDate_ != null) {
                subBuilder = expiryDate_.toBuilder();
              }
              expiryDate_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expiryDate_);
                expiryDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.passkit.grpc.PassOuterClass.PassOptions.Builder subBuilder = null;
              if (passOptions_ != null) {
                subBuilder = passOptions_.toBuilder();
              }
              passOptions_ = input.readMessage(com.passkit.grpc.PassOuterClass.PassOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(passOptions_);
                passOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.passkit.grpc.PassOuterClass.PassOverrides.Builder subBuilder = null;
              if (passOverrides_ != null) {
                subBuilder = passOverrides_.toBuilder();
              }
              passOverrides_ = input.readMessage(com.passkit.grpc.PassOuterClass.PassOverrides.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(passOverrides_);
                passOverrides_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              com.passkit.grpc.MetricsOuterClass.Metadata.Builder subBuilder = null;
              if (passMetaData_ != null) {
                subBuilder = passMetaData_.toBuilder();
              }
              passMetaData_ = input.readMessage(com.passkit.grpc.MetricsOuterClass.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(passMetaData_);
                passMetaData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (created_ != null) {
                subBuilder = created_.toBuilder();
              }
              created_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(created_);
                created_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (updated_ != null) {
                subBuilder = updated_.toBuilder();
              }
              updated_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updated_);
                updated_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_Pass_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetDynamicData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_Pass_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Raw.PassOuterClass.Pass.class, com.passkit.grpc.Raw.PassOuterClass.Pass.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTERNALID_FIELD_NUMBER = 2;
    private volatile java.lang.Object externalId_;
    /**
     * <pre>
     * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The externalId.
     */
    @java.lang.Override
    public java.lang.String getExternalId() {
      java.lang.Object ref = externalId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        externalId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The bytes for externalId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExternalIdBytes() {
      java.lang.Object ref = externalId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        externalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSPROJECTID_FIELD_NUMBER = 3;
    private volatile java.lang.Object passProjectId_;
    /**
     * <pre>
     * The pass project id to issue this pass for.
     * </pre>
     *
     * <code>string passProjectId = 3;</code>
     * @return The passProjectId.
     */
    @java.lang.Override
    public java.lang.String getPassProjectId() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        passProjectId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The pass project id to issue this pass for.
     * </pre>
     *
     * <code>string passProjectId = 3;</code>
     * @return The bytes for passProjectId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPassProjectIdBytes() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passProjectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSTEMPLATEID_FIELD_NUMBER = 4;
    private volatile java.lang.Object passTemplateId_;
    /**
     * <pre>
     * The ID of the template this pass is issued for.
     * </pre>
     *
     * <code>string passTemplateId = 4;</code>
     * @return The passTemplateId.
     */
    @java.lang.Override
    public java.lang.String getPassTemplateId() {
      java.lang.Object ref = passTemplateId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        passTemplateId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the template this pass is issued for.
     * </pre>
     *
     * <code>string passTemplateId = 4;</code>
     * @return The bytes for passTemplateId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPassTemplateIdBytes() {
      java.lang.Object ref = passTemplateId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passTemplateId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERSONALDETAILS_FIELD_NUMBER = 5;
    private com.passkit.grpc.Personal.Person personalDetails_;
    /**
     * <pre>
     * Can contain personal details. Any data in the personalDetails object is stored encrypted.
     * </pre>
     *
     * <code>.io.Person personalDetails = 5;</code>
     * @return Whether the personalDetails field is set.
     */
    @java.lang.Override
    public boolean hasPersonalDetails() {
      return personalDetails_ != null;
    }
    /**
     * <pre>
     * Can contain personal details. Any data in the personalDetails object is stored encrypted.
     * </pre>
     *
     * <code>.io.Person personalDetails = 5;</code>
     * @return The personalDetails.
     */
    @java.lang.Override
    public com.passkit.grpc.Personal.Person getPersonalDetails() {
      return personalDetails_ == null ? com.passkit.grpc.Personal.Person.getDefaultInstance() : personalDetails_;
    }
    /**
     * <pre>
     * Can contain personal details. Any data in the personalDetails object is stored encrypted.
     * </pre>
     *
     * <code>.io.Person personalDetails = 5;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Personal.PersonOrBuilder getPersonalDetailsOrBuilder() {
      return getPersonalDetails();
    }

    public static final int DYNAMICDATA_FIELD_NUMBER = 6;
    private static final class DynamicDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_Pass_DynamicDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> dynamicData_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetDynamicData() {
      if (dynamicData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DynamicDataDefaultEntryHolder.defaultEntry);
      }
      return dynamicData_;
    }

    public int getDynamicDataCount() {
      return internalGetDynamicData().getMap().size();
    }
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */

    @java.lang.Override
    public boolean containsDynamicData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDynamicData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDynamicDataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getDynamicData() {
      return getDynamicDataMap();
    }
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getDynamicDataMap() {
      return internalGetDynamicData().getMap();
    }
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */
    @java.lang.Override

    public java.lang.String getDynamicDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetDynamicData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
     * </pre>
     *
     * <code>map&lt;string, string&gt; dynamicData = 6;</code>
     */
    @java.lang.Override

    public java.lang.String getDynamicDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetDynamicData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OPTOUT_FIELD_NUMBER = 8;
    private boolean optOut_;
    /**
     * <pre>
     * Indicates if this pass is opted out to receive marketing promotions (defaults to false).
     * </pre>
     *
     * <code>bool optOut = 8;</code>
     * @return The optOut.
     */
    @java.lang.Override
    public boolean getOptOut() {
      return optOut_;
    }

    public static final int ISVOIDED_FIELD_NUMBER = 9;
    private boolean isVoided_;
    /**
     * <pre>
     * Indicates if this pass is currently voided.
     * </pre>
     *
     * <code>bool isVoided = 9;</code>
     * @return The isVoided.
     */
    @java.lang.Override
    public boolean getIsVoided() {
      return isVoided_;
    }

    public static final int INVALIDATEDATE_FIELD_NUMBER = 10;
    private com.google.protobuf.Timestamp invalidateDate_;
    /**
     * <pre>
     * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
     * @return Whether the invalidateDate field is set.
     */
    @java.lang.Override
    public boolean hasInvalidateDate() {
      return invalidateDate_ != null;
    }
    /**
     * <pre>
     * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
     * @return The invalidateDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getInvalidateDate() {
      return invalidateDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : invalidateDate_;
    }
    /**
     * <pre>
     * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getInvalidateDateOrBuilder() {
      return getInvalidateDate();
    }

    public static final int EXPIRYDATE_FIELD_NUMBER = 11;
    private com.google.protobuf.Timestamp expiryDate_;
    /**
     * <pre>
     * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
     * @return Whether the expiryDate field is set.
     */
    @java.lang.Override
    public boolean hasExpiryDate() {
      return expiryDate_ != null;
    }
    /**
     * <pre>
     * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
     * @return The expiryDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getExpiryDate() {
      return expiryDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiryDate_;
    }
    /**
     * <pre>
     * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getExpiryDateOrBuilder() {
      return getExpiryDate();
    }

    public static final int PASSOPTIONS_FIELD_NUMBER = 12;
    private com.passkit.grpc.PassOuterClass.PassOptions passOptions_;
    /**
     * <pre>
     * Can hold optional pass customization fields like appLaunchURL and userData
     * </pre>
     *
     * <code>.io.PassOptions passOptions = 12;</code>
     * @return Whether the passOptions field is set.
     */
    @java.lang.Override
    public boolean hasPassOptions() {
      return passOptions_ != null;
    }
    /**
     * <pre>
     * Can hold optional pass customization fields like appLaunchURL and userData
     * </pre>
     *
     * <code>.io.PassOptions passOptions = 12;</code>
     * @return The passOptions.
     */
    @java.lang.Override
    public com.passkit.grpc.PassOuterClass.PassOptions getPassOptions() {
      return passOptions_ == null ? com.passkit.grpc.PassOuterClass.PassOptions.getDefaultInstance() : passOptions_;
    }
    /**
     * <pre>
     * Can hold optional pass customization fields like appLaunchURL and userData
     * </pre>
     *
     * <code>.io.PassOptions passOptions = 12;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.PassOuterClass.PassOptionsOrBuilder getPassOptionsOrBuilder() {
      return getPassOptions();
    }

    public static final int PASSOVERRIDES_FIELD_NUMBER = 13;
    private com.passkit.grpc.PassOuterClass.PassOverrides passOverrides_;
    /**
     * <pre>
     * Pass level overrides for proximity &amp; images.
     * </pre>
     *
     * <code>.io.PassOverrides passOverrides = 13;</code>
     * @return Whether the passOverrides field is set.
     */
    @java.lang.Override
    public boolean hasPassOverrides() {
      return passOverrides_ != null;
    }
    /**
     * <pre>
     * Pass level overrides for proximity &amp; images.
     * </pre>
     *
     * <code>.io.PassOverrides passOverrides = 13;</code>
     * @return The passOverrides.
     */
    @java.lang.Override
    public com.passkit.grpc.PassOuterClass.PassOverrides getPassOverrides() {
      return passOverrides_ == null ? com.passkit.grpc.PassOuterClass.PassOverrides.getDefaultInstance() : passOverrides_;
    }
    /**
     * <pre>
     * Pass level overrides for proximity &amp; images.
     * </pre>
     *
     * <code>.io.PassOverrides passOverrides = 13;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.PassOuterClass.PassOverridesOrBuilder getPassOverridesOrBuilder() {
      return getPassOverrides();
    }

    public static final int PASSMETADATA_FIELD_NUMBER = 14;
    private com.passkit.grpc.MetricsOuterClass.Metadata passMetaData_;
    /**
     * <pre>
     * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
     * </pre>
     *
     * <code>.io.Metadata passMetaData = 14;</code>
     * @return Whether the passMetaData field is set.
     */
    @java.lang.Override
    public boolean hasPassMetaData() {
      return passMetaData_ != null;
    }
    /**
     * <pre>
     * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
     * </pre>
     *
     * <code>.io.Metadata passMetaData = 14;</code>
     * @return The passMetaData.
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.Metadata getPassMetaData() {
      return passMetaData_ == null ? com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : passMetaData_;
    }
    /**
     * <pre>
     * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
     * </pre>
     *
     * <code>.io.Metadata passMetaData = 14;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder getPassMetaDataOrBuilder() {
      return getPassMetaData();
    }

    public static final int CREATED_FIELD_NUMBER = 15;
    private com.google.protobuf.Timestamp created_;
    /**
     * <pre>
     * The date the pass was created in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 15;</code>
     * @return Whether the created field is set.
     */
    @java.lang.Override
    public boolean hasCreated() {
      return created_ != null;
    }
    /**
     * <pre>
     * The date the pass was created in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 15;</code>
     * @return The created.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreated() {
      return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
    }
    /**
     * <pre>
     * The date the pass was created in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created = 15;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
      return getCreated();
    }

    public static final int UPDATED_FIELD_NUMBER = 16;
    private com.google.protobuf.Timestamp updated_;
    /**
     * <pre>
     * The date the pass was last updated in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 16;</code>
     * @return Whether the updated field is set.
     */
    @java.lang.Override
    public boolean hasUpdated() {
      return updated_ != null;
    }
    /**
     * <pre>
     * The date the pass was last updated in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 16;</code>
     * @return The updated.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdated() {
      return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
    }
    /**
     * <pre>
     * The date the pass was last updated in the PassKit system.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated = 16;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
      return getUpdated();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getExternalIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, externalId_);
      }
      if (!getPassProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, passProjectId_);
      }
      if (!getPassTemplateIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, passTemplateId_);
      }
      if (personalDetails_ != null) {
        output.writeMessage(5, getPersonalDetails());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDynamicData(),
          DynamicDataDefaultEntryHolder.defaultEntry,
          6);
      if (optOut_ != false) {
        output.writeBool(8, optOut_);
      }
      if (isVoided_ != false) {
        output.writeBool(9, isVoided_);
      }
      if (invalidateDate_ != null) {
        output.writeMessage(10, getInvalidateDate());
      }
      if (expiryDate_ != null) {
        output.writeMessage(11, getExpiryDate());
      }
      if (passOptions_ != null) {
        output.writeMessage(12, getPassOptions());
      }
      if (passOverrides_ != null) {
        output.writeMessage(13, getPassOverrides());
      }
      if (passMetaData_ != null) {
        output.writeMessage(14, getPassMetaData());
      }
      if (created_ != null) {
        output.writeMessage(15, getCreated());
      }
      if (updated_ != null) {
        output.writeMessage(16, getUpdated());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getExternalIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, externalId_);
      }
      if (!getPassProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, passProjectId_);
      }
      if (!getPassTemplateIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, passTemplateId_);
      }
      if (personalDetails_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPersonalDetails());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetDynamicData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        dynamicData__ = DynamicDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, dynamicData__);
      }
      if (optOut_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, optOut_);
      }
      if (isVoided_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isVoided_);
      }
      if (invalidateDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getInvalidateDate());
      }
      if (expiryDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getExpiryDate());
      }
      if (passOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getPassOptions());
      }
      if (passOverrides_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getPassOverrides());
      }
      if (passMetaData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getPassMetaData());
      }
      if (created_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getCreated());
      }
      if (updated_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getUpdated());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Raw.PassOuterClass.Pass)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Raw.PassOuterClass.Pass other = (com.passkit.grpc.Raw.PassOuterClass.Pass) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getExternalId()
          .equals(other.getExternalId())) return false;
      if (!getPassProjectId()
          .equals(other.getPassProjectId())) return false;
      if (!getPassTemplateId()
          .equals(other.getPassTemplateId())) return false;
      if (hasPersonalDetails() != other.hasPersonalDetails()) return false;
      if (hasPersonalDetails()) {
        if (!getPersonalDetails()
            .equals(other.getPersonalDetails())) return false;
      }
      if (!internalGetDynamicData().equals(
          other.internalGetDynamicData())) return false;
      if (getOptOut()
          != other.getOptOut()) return false;
      if (getIsVoided()
          != other.getIsVoided()) return false;
      if (hasInvalidateDate() != other.hasInvalidateDate()) return false;
      if (hasInvalidateDate()) {
        if (!getInvalidateDate()
            .equals(other.getInvalidateDate())) return false;
      }
      if (hasExpiryDate() != other.hasExpiryDate()) return false;
      if (hasExpiryDate()) {
        if (!getExpiryDate()
            .equals(other.getExpiryDate())) return false;
      }
      if (hasPassOptions() != other.hasPassOptions()) return false;
      if (hasPassOptions()) {
        if (!getPassOptions()
            .equals(other.getPassOptions())) return false;
      }
      if (hasPassOverrides() != other.hasPassOverrides()) return false;
      if (hasPassOverrides()) {
        if (!getPassOverrides()
            .equals(other.getPassOverrides())) return false;
      }
      if (hasPassMetaData() != other.hasPassMetaData()) return false;
      if (hasPassMetaData()) {
        if (!getPassMetaData()
            .equals(other.getPassMetaData())) return false;
      }
      if (hasCreated() != other.hasCreated()) return false;
      if (hasCreated()) {
        if (!getCreated()
            .equals(other.getCreated())) return false;
      }
      if (hasUpdated() != other.hasUpdated()) return false;
      if (hasUpdated()) {
        if (!getUpdated()
            .equals(other.getUpdated())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + EXTERNALID_FIELD_NUMBER;
      hash = (53 * hash) + getExternalId().hashCode();
      hash = (37 * hash) + PASSPROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getPassProjectId().hashCode();
      hash = (37 * hash) + PASSTEMPLATEID_FIELD_NUMBER;
      hash = (53 * hash) + getPassTemplateId().hashCode();
      if (hasPersonalDetails()) {
        hash = (37 * hash) + PERSONALDETAILS_FIELD_NUMBER;
        hash = (53 * hash) + getPersonalDetails().hashCode();
      }
      if (!internalGetDynamicData().getMap().isEmpty()) {
        hash = (37 * hash) + DYNAMICDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDynamicData().hashCode();
      }
      hash = (37 * hash) + OPTOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOptOut());
      hash = (37 * hash) + ISVOIDED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsVoided());
      if (hasInvalidateDate()) {
        hash = (37 * hash) + INVALIDATEDATE_FIELD_NUMBER;
        hash = (53 * hash) + getInvalidateDate().hashCode();
      }
      if (hasExpiryDate()) {
        hash = (37 * hash) + EXPIRYDATE_FIELD_NUMBER;
        hash = (53 * hash) + getExpiryDate().hashCode();
      }
      if (hasPassOptions()) {
        hash = (37 * hash) + PASSOPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPassOptions().hashCode();
      }
      if (hasPassOverrides()) {
        hash = (37 * hash) + PASSOVERRIDES_FIELD_NUMBER;
        hash = (53 * hash) + getPassOverrides().hashCode();
      }
      if (hasPassMetaData()) {
        hash = (37 * hash) + PASSMETADATA_FIELD_NUMBER;
        hash = (53 * hash) + getPassMetaData().hashCode();
      }
      if (hasCreated()) {
        hash = (37 * hash) + CREATED_FIELD_NUMBER;
        hash = (53 * hash) + getCreated().hashCode();
      }
      if (hasUpdated()) {
        hash = (37 * hash) + UPDATED_FIELD_NUMBER;
        hash = (53 * hash) + getUpdated().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.Pass parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Raw.PassOuterClass.Pass prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The pass object
     * </pre>
     *
     * Protobuf type {@code raw.Pass}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:raw.Pass)
        com.passkit.grpc.Raw.PassOuterClass.PassOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_Pass_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetDynamicData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableDynamicData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_Pass_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Raw.PassOuterClass.Pass.class, com.passkit.grpc.Raw.PassOuterClass.Pass.Builder.class);
      }

      // Construct using com.passkit.grpc.Raw.PassOuterClass.Pass.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        externalId_ = "";

        passProjectId_ = "";

        passTemplateId_ = "";

        if (personalDetailsBuilder_ == null) {
          personalDetails_ = null;
        } else {
          personalDetails_ = null;
          personalDetailsBuilder_ = null;
        }
        internalGetMutableDynamicData().clear();
        optOut_ = false;

        isVoided_ = false;

        if (invalidateDateBuilder_ == null) {
          invalidateDate_ = null;
        } else {
          invalidateDate_ = null;
          invalidateDateBuilder_ = null;
        }
        if (expiryDateBuilder_ == null) {
          expiryDate_ = null;
        } else {
          expiryDate_ = null;
          expiryDateBuilder_ = null;
        }
        if (passOptionsBuilder_ == null) {
          passOptions_ = null;
        } else {
          passOptions_ = null;
          passOptionsBuilder_ = null;
        }
        if (passOverridesBuilder_ == null) {
          passOverrides_ = null;
        } else {
          passOverrides_ = null;
          passOverridesBuilder_ = null;
        }
        if (passMetaDataBuilder_ == null) {
          passMetaData_ = null;
        } else {
          passMetaData_ = null;
          passMetaDataBuilder_ = null;
        }
        if (createdBuilder_ == null) {
          created_ = null;
        } else {
          created_ = null;
          createdBuilder_ = null;
        }
        if (updatedBuilder_ == null) {
          updated_ = null;
        } else {
          updated_ = null;
          updatedBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_Pass_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.Pass getDefaultInstanceForType() {
        return com.passkit.grpc.Raw.PassOuterClass.Pass.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.Pass build() {
        com.passkit.grpc.Raw.PassOuterClass.Pass result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.Pass buildPartial() {
        com.passkit.grpc.Raw.PassOuterClass.Pass result = new com.passkit.grpc.Raw.PassOuterClass.Pass(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.externalId_ = externalId_;
        result.passProjectId_ = passProjectId_;
        result.passTemplateId_ = passTemplateId_;
        if (personalDetailsBuilder_ == null) {
          result.personalDetails_ = personalDetails_;
        } else {
          result.personalDetails_ = personalDetailsBuilder_.build();
        }
        result.dynamicData_ = internalGetDynamicData();
        result.dynamicData_.makeImmutable();
        result.optOut_ = optOut_;
        result.isVoided_ = isVoided_;
        if (invalidateDateBuilder_ == null) {
          result.invalidateDate_ = invalidateDate_;
        } else {
          result.invalidateDate_ = invalidateDateBuilder_.build();
        }
        if (expiryDateBuilder_ == null) {
          result.expiryDate_ = expiryDate_;
        } else {
          result.expiryDate_ = expiryDateBuilder_.build();
        }
        if (passOptionsBuilder_ == null) {
          result.passOptions_ = passOptions_;
        } else {
          result.passOptions_ = passOptionsBuilder_.build();
        }
        if (passOverridesBuilder_ == null) {
          result.passOverrides_ = passOverrides_;
        } else {
          result.passOverrides_ = passOverridesBuilder_.build();
        }
        if (passMetaDataBuilder_ == null) {
          result.passMetaData_ = passMetaData_;
        } else {
          result.passMetaData_ = passMetaDataBuilder_.build();
        }
        if (createdBuilder_ == null) {
          result.created_ = created_;
        } else {
          result.created_ = createdBuilder_.build();
        }
        if (updatedBuilder_ == null) {
          result.updated_ = updated_;
        } else {
          result.updated_ = updatedBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Raw.PassOuterClass.Pass) {
          return mergeFrom((com.passkit.grpc.Raw.PassOuterClass.Pass)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Raw.PassOuterClass.Pass other) {
        if (other == com.passkit.grpc.Raw.PassOuterClass.Pass.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getExternalId().isEmpty()) {
          externalId_ = other.externalId_;
          onChanged();
        }
        if (!other.getPassProjectId().isEmpty()) {
          passProjectId_ = other.passProjectId_;
          onChanged();
        }
        if (!other.getPassTemplateId().isEmpty()) {
          passTemplateId_ = other.passTemplateId_;
          onChanged();
        }
        if (other.hasPersonalDetails()) {
          mergePersonalDetails(other.getPersonalDetails());
        }
        internalGetMutableDynamicData().mergeFrom(
            other.internalGetDynamicData());
        if (other.getOptOut() != false) {
          setOptOut(other.getOptOut());
        }
        if (other.getIsVoided() != false) {
          setIsVoided(other.getIsVoided());
        }
        if (other.hasInvalidateDate()) {
          mergeInvalidateDate(other.getInvalidateDate());
        }
        if (other.hasExpiryDate()) {
          mergeExpiryDate(other.getExpiryDate());
        }
        if (other.hasPassOptions()) {
          mergePassOptions(other.getPassOptions());
        }
        if (other.hasPassOverrides()) {
          mergePassOverrides(other.getPassOverrides());
        }
        if (other.hasPassMetaData()) {
          mergePassMetaData(other.getPassMetaData());
        }
        if (other.hasCreated()) {
          mergeCreated(other.getCreated());
        }
        if (other.hasUpdated()) {
          mergeUpdated(other.getUpdated());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.passkit.grpc.Raw.PassOuterClass.Pass parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.passkit.grpc.Raw.PassOuterClass.Pass) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id assigned by PassKit to represent the pass record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object externalId_ = "";
      /**
       * <pre>
       * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @return The externalId.
       */
      public java.lang.String getExternalId() {
        java.lang.Object ref = externalId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          externalId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @return The bytes for externalId.
       */
      public com.google.protobuf.ByteString
          getExternalIdBytes() {
        java.lang.Object ref = externalId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          externalId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @param value The externalId to set.
       * @return This builder for chaining.
       */
      public Builder setExternalId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        externalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternalId() {
        
        externalId_ = getDefaultInstance().getExternalId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This can be used to set the 'external' ID of pass (i.e. the ID as it's being used in your system). If provided then this can be used to query &amp; update passes. This field will be treated as unique within the pass project, and cannot be updated at a later stage.
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @param value The bytes for externalId to set.
       * @return This builder for chaining.
       */
      public Builder setExternalIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        externalId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object passProjectId_ = "";
      /**
       * <pre>
       * The pass project id to issue this pass for.
       * </pre>
       *
       * <code>string passProjectId = 3;</code>
       * @return The passProjectId.
       */
      public java.lang.String getPassProjectId() {
        java.lang.Object ref = passProjectId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          passProjectId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The pass project id to issue this pass for.
       * </pre>
       *
       * <code>string passProjectId = 3;</code>
       * @return The bytes for passProjectId.
       */
      public com.google.protobuf.ByteString
          getPassProjectIdBytes() {
        java.lang.Object ref = passProjectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passProjectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The pass project id to issue this pass for.
       * </pre>
       *
       * <code>string passProjectId = 3;</code>
       * @param value The passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        passProjectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The pass project id to issue this pass for.
       * </pre>
       *
       * <code>string passProjectId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassProjectId() {
        
        passProjectId_ = getDefaultInstance().getPassProjectId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The pass project id to issue this pass for.
       * </pre>
       *
       * <code>string passProjectId = 3;</code>
       * @param value The bytes for passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        passProjectId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object passTemplateId_ = "";
      /**
       * <pre>
       * The ID of the template this pass is issued for.
       * </pre>
       *
       * <code>string passTemplateId = 4;</code>
       * @return The passTemplateId.
       */
      public java.lang.String getPassTemplateId() {
        java.lang.Object ref = passTemplateId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          passTemplateId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the template this pass is issued for.
       * </pre>
       *
       * <code>string passTemplateId = 4;</code>
       * @return The bytes for passTemplateId.
       */
      public com.google.protobuf.ByteString
          getPassTemplateIdBytes() {
        java.lang.Object ref = passTemplateId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passTemplateId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the template this pass is issued for.
       * </pre>
       *
       * <code>string passTemplateId = 4;</code>
       * @param value The passTemplateId to set.
       * @return This builder for chaining.
       */
      public Builder setPassTemplateId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        passTemplateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the template this pass is issued for.
       * </pre>
       *
       * <code>string passTemplateId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassTemplateId() {
        
        passTemplateId_ = getDefaultInstance().getPassTemplateId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the template this pass is issued for.
       * </pre>
       *
       * <code>string passTemplateId = 4;</code>
       * @param value The bytes for passTemplateId to set.
       * @return This builder for chaining.
       */
      public Builder setPassTemplateIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        passTemplateId_ = value;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Personal.Person personalDetails_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Personal.Person, com.passkit.grpc.Personal.Person.Builder, com.passkit.grpc.Personal.PersonOrBuilder> personalDetailsBuilder_;
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       * @return Whether the personalDetails field is set.
       */
      public boolean hasPersonalDetails() {
        return personalDetailsBuilder_ != null || personalDetails_ != null;
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       * @return The personalDetails.
       */
      public com.passkit.grpc.Personal.Person getPersonalDetails() {
        if (personalDetailsBuilder_ == null) {
          return personalDetails_ == null ? com.passkit.grpc.Personal.Person.getDefaultInstance() : personalDetails_;
        } else {
          return personalDetailsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      public Builder setPersonalDetails(com.passkit.grpc.Personal.Person value) {
        if (personalDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personalDetails_ = value;
          onChanged();
        } else {
          personalDetailsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      public Builder setPersonalDetails(
          com.passkit.grpc.Personal.Person.Builder builderForValue) {
        if (personalDetailsBuilder_ == null) {
          personalDetails_ = builderForValue.build();
          onChanged();
        } else {
          personalDetailsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      public Builder mergePersonalDetails(com.passkit.grpc.Personal.Person value) {
        if (personalDetailsBuilder_ == null) {
          if (personalDetails_ != null) {
            personalDetails_ =
              com.passkit.grpc.Personal.Person.newBuilder(personalDetails_).mergeFrom(value).buildPartial();
          } else {
            personalDetails_ = value;
          }
          onChanged();
        } else {
          personalDetailsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      public Builder clearPersonalDetails() {
        if (personalDetailsBuilder_ == null) {
          personalDetails_ = null;
          onChanged();
        } else {
          personalDetails_ = null;
          personalDetailsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      public com.passkit.grpc.Personal.Person.Builder getPersonalDetailsBuilder() {
        
        onChanged();
        return getPersonalDetailsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      public com.passkit.grpc.Personal.PersonOrBuilder getPersonalDetailsOrBuilder() {
        if (personalDetailsBuilder_ != null) {
          return personalDetailsBuilder_.getMessageOrBuilder();
        } else {
          return personalDetails_ == null ?
              com.passkit.grpc.Personal.Person.getDefaultInstance() : personalDetails_;
        }
      }
      /**
       * <pre>
       * Can contain personal details. Any data in the personalDetails object is stored encrypted.
       * </pre>
       *
       * <code>.io.Person personalDetails = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Personal.Person, com.passkit.grpc.Personal.Person.Builder, com.passkit.grpc.Personal.PersonOrBuilder> 
          getPersonalDetailsFieldBuilder() {
        if (personalDetailsBuilder_ == null) {
          personalDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Personal.Person, com.passkit.grpc.Personal.Person.Builder, com.passkit.grpc.Personal.PersonOrBuilder>(
                  getPersonalDetails(),
                  getParentForChildren(),
                  isClean());
          personalDetails_ = null;
        }
        return personalDetailsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> dynamicData_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetDynamicData() {
        if (dynamicData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DynamicDataDefaultEntryHolder.defaultEntry);
        }
        return dynamicData_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableDynamicData() {
        onChanged();;
        if (dynamicData_ == null) {
          dynamicData_ = com.google.protobuf.MapField.newMapField(
              DynamicDataDefaultEntryHolder.defaultEntry);
        }
        if (!dynamicData_.isMutable()) {
          dynamicData_ = dynamicData_.copy();
        }
        return dynamicData_;
      }

      public int getDynamicDataCount() {
        return internalGetDynamicData().getMap().size();
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */

      @java.lang.Override
      public boolean containsDynamicData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetDynamicData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDynamicDataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getDynamicData() {
        return getDynamicDataMap();
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getDynamicDataMap() {
        return internalGetDynamicData().getMap();
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */
      @java.lang.Override

      public java.lang.String getDynamicDataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetDynamicData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */
      @java.lang.Override

      public java.lang.String getDynamicDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetDynamicData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDynamicData() {
        internalGetMutableDynamicData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */

      public Builder removeDynamicData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDynamicData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableDynamicData() {
        return internalGetMutableDynamicData().getMutableMap();
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */
      public Builder putDynamicData(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDynamicData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Dynamic data fields. This data cannot be queried on, but can be used to render / update on the pass. Fields will render in the correct format based on template settings.
       * </pre>
       *
       * <code>map&lt;string, string&gt; dynamicData = 6;</code>
       */

      public Builder putAllDynamicData(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableDynamicData().getMutableMap()
            .putAll(values);
        return this;
      }

      private boolean optOut_ ;
      /**
       * <pre>
       * Indicates if this pass is opted out to receive marketing promotions (defaults to false).
       * </pre>
       *
       * <code>bool optOut = 8;</code>
       * @return The optOut.
       */
      @java.lang.Override
      public boolean getOptOut() {
        return optOut_;
      }
      /**
       * <pre>
       * Indicates if this pass is opted out to receive marketing promotions (defaults to false).
       * </pre>
       *
       * <code>bool optOut = 8;</code>
       * @param value The optOut to set.
       * @return This builder for chaining.
       */
      public Builder setOptOut(boolean value) {
        
        optOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates if this pass is opted out to receive marketing promotions (defaults to false).
       * </pre>
       *
       * <code>bool optOut = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptOut() {
        
        optOut_ = false;
        onChanged();
        return this;
      }

      private boolean isVoided_ ;
      /**
       * <pre>
       * Indicates if this pass is currently voided.
       * </pre>
       *
       * <code>bool isVoided = 9;</code>
       * @return The isVoided.
       */
      @java.lang.Override
      public boolean getIsVoided() {
        return isVoided_;
      }
      /**
       * <pre>
       * Indicates if this pass is currently voided.
       * </pre>
       *
       * <code>bool isVoided = 9;</code>
       * @param value The isVoided to set.
       * @return This builder for chaining.
       */
      public Builder setIsVoided(boolean value) {
        
        isVoided_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates if this pass is currently voided.
       * </pre>
       *
       * <code>bool isVoided = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsVoided() {
        
        isVoided_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp invalidateDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> invalidateDateBuilder_;
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       * @return Whether the invalidateDate field is set.
       */
      public boolean hasInvalidateDate() {
        return invalidateDateBuilder_ != null || invalidateDate_ != null;
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       * @return The invalidateDate.
       */
      public com.google.protobuf.Timestamp getInvalidateDate() {
        if (invalidateDateBuilder_ == null) {
          return invalidateDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : invalidateDate_;
        } else {
          return invalidateDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      public Builder setInvalidateDate(com.google.protobuf.Timestamp value) {
        if (invalidateDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          invalidateDate_ = value;
          onChanged();
        } else {
          invalidateDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      public Builder setInvalidateDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (invalidateDateBuilder_ == null) {
          invalidateDate_ = builderForValue.build();
          onChanged();
        } else {
          invalidateDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      public Builder mergeInvalidateDate(com.google.protobuf.Timestamp value) {
        if (invalidateDateBuilder_ == null) {
          if (invalidateDate_ != null) {
            invalidateDate_ =
              com.google.protobuf.Timestamp.newBuilder(invalidateDate_).mergeFrom(value).buildPartial();
          } else {
            invalidateDate_ = value;
          }
          onChanged();
        } else {
          invalidateDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      public Builder clearInvalidateDate() {
        if (invalidateDateBuilder_ == null) {
          invalidateDate_ = null;
          onChanged();
        } else {
          invalidateDate_ = null;
          invalidateDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      public com.google.protobuf.Timestamp.Builder getInvalidateDateBuilder() {
        
        onChanged();
        return getInvalidateDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getInvalidateDateOrBuilder() {
        if (invalidateDateBuilder_ != null) {
          return invalidateDateBuilder_.getMessageOrBuilder();
        } else {
          return invalidateDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : invalidateDate_;
        }
      }
      /**
       * <pre>
       * Indicates when the pass invalidates. When the invalidate date hits, the pass is automatically invalidated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp invalidateDate = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getInvalidateDateFieldBuilder() {
        if (invalidateDateBuilder_ == null) {
          invalidateDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getInvalidateDate(),
                  getParentForChildren(),
                  isClean());
          invalidateDate_ = null;
        }
        return invalidateDateBuilder_;
      }

      private com.google.protobuf.Timestamp expiryDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expiryDateBuilder_;
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       * @return Whether the expiryDate field is set.
       */
      public boolean hasExpiryDate() {
        return expiryDateBuilder_ != null || expiryDate_ != null;
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       * @return The expiryDate.
       */
      public com.google.protobuf.Timestamp getExpiryDate() {
        if (expiryDateBuilder_ == null) {
          return expiryDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiryDate_;
        } else {
          return expiryDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      public Builder setExpiryDate(com.google.protobuf.Timestamp value) {
        if (expiryDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expiryDate_ = value;
          onChanged();
        } else {
          expiryDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      public Builder setExpiryDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (expiryDateBuilder_ == null) {
          expiryDate_ = builderForValue.build();
          onChanged();
        } else {
          expiryDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      public Builder mergeExpiryDate(com.google.protobuf.Timestamp value) {
        if (expiryDateBuilder_ == null) {
          if (expiryDate_ != null) {
            expiryDate_ =
              com.google.protobuf.Timestamp.newBuilder(expiryDate_).mergeFrom(value).buildPartial();
          } else {
            expiryDate_ = value;
          }
          onChanged();
        } else {
          expiryDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      public Builder clearExpiryDate() {
        if (expiryDateBuilder_ == null) {
          expiryDate_ = null;
          onChanged();
        } else {
          expiryDate_ = null;
          expiryDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      public com.google.protobuf.Timestamp.Builder getExpiryDateBuilder() {
        
        onChanged();
        return getExpiryDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getExpiryDateOrBuilder() {
        if (expiryDateBuilder_ != null) {
          return expiryDateBuilder_.getMessageOrBuilder();
        } else {
          return expiryDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : expiryDate_;
        }
      }
      /**
       * <pre>
       * Indicates when the pass expires. When the expiry date hits, it will automatically gray out the barcode.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiryDate = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getExpiryDateFieldBuilder() {
        if (expiryDateBuilder_ == null) {
          expiryDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getExpiryDate(),
                  getParentForChildren(),
                  isClean());
          expiryDate_ = null;
        }
        return expiryDateBuilder_;
      }

      private com.passkit.grpc.PassOuterClass.PassOptions passOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.PassOuterClass.PassOptions, com.passkit.grpc.PassOuterClass.PassOptions.Builder, com.passkit.grpc.PassOuterClass.PassOptionsOrBuilder> passOptionsBuilder_;
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       * @return Whether the passOptions field is set.
       */
      public boolean hasPassOptions() {
        return passOptionsBuilder_ != null || passOptions_ != null;
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       * @return The passOptions.
       */
      public com.passkit.grpc.PassOuterClass.PassOptions getPassOptions() {
        if (passOptionsBuilder_ == null) {
          return passOptions_ == null ? com.passkit.grpc.PassOuterClass.PassOptions.getDefaultInstance() : passOptions_;
        } else {
          return passOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      public Builder setPassOptions(com.passkit.grpc.PassOuterClass.PassOptions value) {
        if (passOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          passOptions_ = value;
          onChanged();
        } else {
          passOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      public Builder setPassOptions(
          com.passkit.grpc.PassOuterClass.PassOptions.Builder builderForValue) {
        if (passOptionsBuilder_ == null) {
          passOptions_ = builderForValue.build();
          onChanged();
        } else {
          passOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      public Builder mergePassOptions(com.passkit.grpc.PassOuterClass.PassOptions value) {
        if (passOptionsBuilder_ == null) {
          if (passOptions_ != null) {
            passOptions_ =
              com.passkit.grpc.PassOuterClass.PassOptions.newBuilder(passOptions_).mergeFrom(value).buildPartial();
          } else {
            passOptions_ = value;
          }
          onChanged();
        } else {
          passOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      public Builder clearPassOptions() {
        if (passOptionsBuilder_ == null) {
          passOptions_ = null;
          onChanged();
        } else {
          passOptions_ = null;
          passOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      public com.passkit.grpc.PassOuterClass.PassOptions.Builder getPassOptionsBuilder() {
        
        onChanged();
        return getPassOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      public com.passkit.grpc.PassOuterClass.PassOptionsOrBuilder getPassOptionsOrBuilder() {
        if (passOptionsBuilder_ != null) {
          return passOptionsBuilder_.getMessageOrBuilder();
        } else {
          return passOptions_ == null ?
              com.passkit.grpc.PassOuterClass.PassOptions.getDefaultInstance() : passOptions_;
        }
      }
      /**
       * <pre>
       * Can hold optional pass customization fields like appLaunchURL and userData
       * </pre>
       *
       * <code>.io.PassOptions passOptions = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.PassOuterClass.PassOptions, com.passkit.grpc.PassOuterClass.PassOptions.Builder, com.passkit.grpc.PassOuterClass.PassOptionsOrBuilder> 
          getPassOptionsFieldBuilder() {
        if (passOptionsBuilder_ == null) {
          passOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.PassOuterClass.PassOptions, com.passkit.grpc.PassOuterClass.PassOptions.Builder, com.passkit.grpc.PassOuterClass.PassOptionsOrBuilder>(
                  getPassOptions(),
                  getParentForChildren(),
                  isClean());
          passOptions_ = null;
        }
        return passOptionsBuilder_;
      }

      private com.passkit.grpc.PassOuterClass.PassOverrides passOverrides_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.PassOuterClass.PassOverrides, com.passkit.grpc.PassOuterClass.PassOverrides.Builder, com.passkit.grpc.PassOuterClass.PassOverridesOrBuilder> passOverridesBuilder_;
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       * @return Whether the passOverrides field is set.
       */
      public boolean hasPassOverrides() {
        return passOverridesBuilder_ != null || passOverrides_ != null;
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       * @return The passOverrides.
       */
      public com.passkit.grpc.PassOuterClass.PassOverrides getPassOverrides() {
        if (passOverridesBuilder_ == null) {
          return passOverrides_ == null ? com.passkit.grpc.PassOuterClass.PassOverrides.getDefaultInstance() : passOverrides_;
        } else {
          return passOverridesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      public Builder setPassOverrides(com.passkit.grpc.PassOuterClass.PassOverrides value) {
        if (passOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          passOverrides_ = value;
          onChanged();
        } else {
          passOverridesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      public Builder setPassOverrides(
          com.passkit.grpc.PassOuterClass.PassOverrides.Builder builderForValue) {
        if (passOverridesBuilder_ == null) {
          passOverrides_ = builderForValue.build();
          onChanged();
        } else {
          passOverridesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      public Builder mergePassOverrides(com.passkit.grpc.PassOuterClass.PassOverrides value) {
        if (passOverridesBuilder_ == null) {
          if (passOverrides_ != null) {
            passOverrides_ =
              com.passkit.grpc.PassOuterClass.PassOverrides.newBuilder(passOverrides_).mergeFrom(value).buildPartial();
          } else {
            passOverrides_ = value;
          }
          onChanged();
        } else {
          passOverridesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      public Builder clearPassOverrides() {
        if (passOverridesBuilder_ == null) {
          passOverrides_ = null;
          onChanged();
        } else {
          passOverrides_ = null;
          passOverridesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      public com.passkit.grpc.PassOuterClass.PassOverrides.Builder getPassOverridesBuilder() {
        
        onChanged();
        return getPassOverridesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      public com.passkit.grpc.PassOuterClass.PassOverridesOrBuilder getPassOverridesOrBuilder() {
        if (passOverridesBuilder_ != null) {
          return passOverridesBuilder_.getMessageOrBuilder();
        } else {
          return passOverrides_ == null ?
              com.passkit.grpc.PassOuterClass.PassOverrides.getDefaultInstance() : passOverrides_;
        }
      }
      /**
       * <pre>
       * Pass level overrides for proximity &amp; images.
       * </pre>
       *
       * <code>.io.PassOverrides passOverrides = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.PassOuterClass.PassOverrides, com.passkit.grpc.PassOuterClass.PassOverrides.Builder, com.passkit.grpc.PassOuterClass.PassOverridesOrBuilder> 
          getPassOverridesFieldBuilder() {
        if (passOverridesBuilder_ == null) {
          passOverridesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.PassOuterClass.PassOverrides, com.passkit.grpc.PassOuterClass.PassOverrides.Builder, com.passkit.grpc.PassOuterClass.PassOverridesOrBuilder>(
                  getPassOverrides(),
                  getParentForChildren(),
                  isClean());
          passOverrides_ = null;
        }
        return passOverridesBuilder_;
      }

      private com.passkit.grpc.MetricsOuterClass.Metadata passMetaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metadata, com.passkit.grpc.MetricsOuterClass.Metadata.Builder, com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder> passMetaDataBuilder_;
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       * @return Whether the passMetaData field is set.
       */
      public boolean hasPassMetaData() {
        return passMetaDataBuilder_ != null || passMetaData_ != null;
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       * @return The passMetaData.
       */
      public com.passkit.grpc.MetricsOuterClass.Metadata getPassMetaData() {
        if (passMetaDataBuilder_ == null) {
          return passMetaData_ == null ? com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : passMetaData_;
        } else {
          return passMetaDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      public Builder setPassMetaData(com.passkit.grpc.MetricsOuterClass.Metadata value) {
        if (passMetaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          passMetaData_ = value;
          onChanged();
        } else {
          passMetaDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      public Builder setPassMetaData(
          com.passkit.grpc.MetricsOuterClass.Metadata.Builder builderForValue) {
        if (passMetaDataBuilder_ == null) {
          passMetaData_ = builderForValue.build();
          onChanged();
        } else {
          passMetaDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      public Builder mergePassMetaData(com.passkit.grpc.MetricsOuterClass.Metadata value) {
        if (passMetaDataBuilder_ == null) {
          if (passMetaData_ != null) {
            passMetaData_ =
              com.passkit.grpc.MetricsOuterClass.Metadata.newBuilder(passMetaData_).mergeFrom(value).buildPartial();
          } else {
            passMetaData_ = value;
          }
          onChanged();
        } else {
          passMetaDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      public Builder clearPassMetaData() {
        if (passMetaDataBuilder_ == null) {
          passMetaData_ = null;
          onChanged();
        } else {
          passMetaData_ = null;
          passMetaDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.Metadata.Builder getPassMetaDataBuilder() {
        
        onChanged();
        return getPassMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      public com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder getPassMetaDataOrBuilder() {
        if (passMetaDataBuilder_ != null) {
          return passMetaDataBuilder_.getMessageOrBuilder();
        } else {
          return passMetaData_ == null ?
              com.passkit.grpc.MetricsOuterClass.Metadata.getDefaultInstance() : passMetaData_;
        }
      }
      /**
       * <pre>
       * Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
       * </pre>
       *
       * <code>.io.Metadata passMetaData = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.MetricsOuterClass.Metadata, com.passkit.grpc.MetricsOuterClass.Metadata.Builder, com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder> 
          getPassMetaDataFieldBuilder() {
        if (passMetaDataBuilder_ == null) {
          passMetaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.MetricsOuterClass.Metadata, com.passkit.grpc.MetricsOuterClass.Metadata.Builder, com.passkit.grpc.MetricsOuterClass.MetadataOrBuilder>(
                  getPassMetaData(),
                  getParentForChildren(),
                  isClean());
          passMetaData_ = null;
        }
        return passMetaDataBuilder_;
      }

      private com.google.protobuf.Timestamp created_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdBuilder_;
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       * @return Whether the created field is set.
       */
      public boolean hasCreated() {
        return createdBuilder_ != null || created_ != null;
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       * @return The created.
       */
      public com.google.protobuf.Timestamp getCreated() {
        if (createdBuilder_ == null) {
          return created_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        } else {
          return createdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      public Builder setCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          created_ = value;
          onChanged();
        } else {
          createdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      public Builder setCreated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (createdBuilder_ == null) {
          created_ = builderForValue.build();
          onChanged();
        } else {
          createdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      public Builder mergeCreated(com.google.protobuf.Timestamp value) {
        if (createdBuilder_ == null) {
          if (created_ != null) {
            created_ =
              com.google.protobuf.Timestamp.newBuilder(created_).mergeFrom(value).buildPartial();
          } else {
            created_ = value;
          }
          onChanged();
        } else {
          createdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      public Builder clearCreated() {
        if (createdBuilder_ == null) {
          created_ = null;
          onChanged();
        } else {
          created_ = null;
          createdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      public com.google.protobuf.Timestamp.Builder getCreatedBuilder() {
        
        onChanged();
        return getCreatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCreatedOrBuilder() {
        if (createdBuilder_ != null) {
          return createdBuilder_.getMessageOrBuilder();
        } else {
          return created_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : created_;
        }
      }
      /**
       * <pre>
       * The date the pass was created in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getCreatedFieldBuilder() {
        if (createdBuilder_ == null) {
          createdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getCreated(),
                  getParentForChildren(),
                  isClean());
          created_ = null;
        }
        return createdBuilder_;
      }

      private com.google.protobuf.Timestamp updated_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updatedBuilder_;
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       * @return Whether the updated field is set.
       */
      public boolean hasUpdated() {
        return updatedBuilder_ != null || updated_ != null;
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       * @return The updated.
       */
      public com.google.protobuf.Timestamp getUpdated() {
        if (updatedBuilder_ == null) {
          return updated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        } else {
          return updatedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      public Builder setUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updated_ = value;
          onChanged();
        } else {
          updatedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      public Builder setUpdated(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (updatedBuilder_ == null) {
          updated_ = builderForValue.build();
          onChanged();
        } else {
          updatedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      public Builder mergeUpdated(com.google.protobuf.Timestamp value) {
        if (updatedBuilder_ == null) {
          if (updated_ != null) {
            updated_ =
              com.google.protobuf.Timestamp.newBuilder(updated_).mergeFrom(value).buildPartial();
          } else {
            updated_ = value;
          }
          onChanged();
        } else {
          updatedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      public Builder clearUpdated() {
        if (updatedBuilder_ == null) {
          updated_ = null;
          onChanged();
        } else {
          updated_ = null;
          updatedBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      public com.google.protobuf.Timestamp.Builder getUpdatedBuilder() {
        
        onChanged();
        return getUpdatedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getUpdatedOrBuilder() {
        if (updatedBuilder_ != null) {
          return updatedBuilder_.getMessageOrBuilder();
        } else {
          return updated_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : updated_;
        }
      }
      /**
       * <pre>
       * The date the pass was last updated in the PassKit system.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getUpdatedFieldBuilder() {
        if (updatedBuilder_ == null) {
          updatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getUpdated(),
                  getParentForChildren(),
                  isClean());
          updated_ = null;
        }
        return updatedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:raw.Pass)
    }

    // @@protoc_insertion_point(class_scope:raw.Pass)
    private static final com.passkit.grpc.Raw.PassOuterClass.Pass DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Raw.PassOuterClass.Pass();
    }

    public static com.passkit.grpc.Raw.PassOuterClass.Pass getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pass>
        PARSER = new com.google.protobuf.AbstractParser<Pass>() {
      @java.lang.Override
      public Pass parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pass(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pass> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pass> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Raw.PassOuterClass.Pass getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PassRecordByExternalIdRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:raw.PassRecordByExternalIdRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Pass Project ID
     * </pre>
     *
     * <code>string passProjectId = 1;</code>
     * @return The passProjectId.
     */
    java.lang.String getPassProjectId();
    /**
     * <pre>
     * Pass Project ID
     * </pre>
     *
     * <code>string passProjectId = 1;</code>
     * @return The bytes for passProjectId.
     */
    com.google.protobuf.ByteString
        getPassProjectIdBytes();

    /**
     * <pre>
     * External ID
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The externalId.
     */
    java.lang.String getExternalId();
    /**
     * <pre>
     * External ID
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The bytes for externalId.
     */
    com.google.protobuf.ByteString
        getExternalIdBytes();
  }
  /**
   * Protobuf type {@code raw.PassRecordByExternalIdRequest}
   */
  public static final class PassRecordByExternalIdRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:raw.PassRecordByExternalIdRequest)
      PassRecordByExternalIdRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PassRecordByExternalIdRequest.newBuilder() to construct.
    private PassRecordByExternalIdRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PassRecordByExternalIdRequest() {
      passProjectId_ = "";
      externalId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PassRecordByExternalIdRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PassRecordByExternalIdRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              passProjectId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              externalId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_PassRecordByExternalIdRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_PassRecordByExternalIdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.class, com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.Builder.class);
    }

    public static final int PASSPROJECTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object passProjectId_;
    /**
     * <pre>
     * Pass Project ID
     * </pre>
     *
     * <code>string passProjectId = 1;</code>
     * @return The passProjectId.
     */
    @java.lang.Override
    public java.lang.String getPassProjectId() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        passProjectId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Pass Project ID
     * </pre>
     *
     * <code>string passProjectId = 1;</code>
     * @return The bytes for passProjectId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPassProjectIdBytes() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passProjectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTERNALID_FIELD_NUMBER = 2;
    private volatile java.lang.Object externalId_;
    /**
     * <pre>
     * External ID
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The externalId.
     */
    @java.lang.Override
    public java.lang.String getExternalId() {
      java.lang.Object ref = externalId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        externalId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * External ID
     * </pre>
     *
     * <code>string externalId = 2;</code>
     * @return The bytes for externalId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExternalIdBytes() {
      java.lang.Object ref = externalId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        externalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPassProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, passProjectId_);
      }
      if (!getExternalIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, externalId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPassProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, passProjectId_);
      }
      if (!getExternalIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, externalId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest other = (com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest) obj;

      if (!getPassProjectId()
          .equals(other.getPassProjectId())) return false;
      if (!getExternalId()
          .equals(other.getExternalId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PASSPROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getPassProjectId().hashCode();
      hash = (37 * hash) + EXTERNALID_FIELD_NUMBER;
      hash = (53 * hash) + getExternalId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code raw.PassRecordByExternalIdRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:raw.PassRecordByExternalIdRequest)
        com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_PassRecordByExternalIdRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_PassRecordByExternalIdRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.class, com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        passProjectId_ = "";

        externalId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_PassRecordByExternalIdRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest build() {
        com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest buildPartial() {
        com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest result = new com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest(this);
        result.passProjectId_ = passProjectId_;
        result.externalId_ = externalId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest) {
          return mergeFrom((com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest other) {
        if (other == com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest.getDefaultInstance()) return this;
        if (!other.getPassProjectId().isEmpty()) {
          passProjectId_ = other.passProjectId_;
          onChanged();
        }
        if (!other.getExternalId().isEmpty()) {
          externalId_ = other.externalId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object passProjectId_ = "";
      /**
       * <pre>
       * Pass Project ID
       * </pre>
       *
       * <code>string passProjectId = 1;</code>
       * @return The passProjectId.
       */
      public java.lang.String getPassProjectId() {
        java.lang.Object ref = passProjectId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          passProjectId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Pass Project ID
       * </pre>
       *
       * <code>string passProjectId = 1;</code>
       * @return The bytes for passProjectId.
       */
      public com.google.protobuf.ByteString
          getPassProjectIdBytes() {
        java.lang.Object ref = passProjectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passProjectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Pass Project ID
       * </pre>
       *
       * <code>string passProjectId = 1;</code>
       * @param value The passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        passProjectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pass Project ID
       * </pre>
       *
       * <code>string passProjectId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassProjectId() {
        
        passProjectId_ = getDefaultInstance().getPassProjectId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pass Project ID
       * </pre>
       *
       * <code>string passProjectId = 1;</code>
       * @param value The bytes for passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        passProjectId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object externalId_ = "";
      /**
       * <pre>
       * External ID
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @return The externalId.
       */
      public java.lang.String getExternalId() {
        java.lang.Object ref = externalId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          externalId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * External ID
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @return The bytes for externalId.
       */
      public com.google.protobuf.ByteString
          getExternalIdBytes() {
        java.lang.Object ref = externalId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          externalId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * External ID
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @param value The externalId to set.
       * @return This builder for chaining.
       */
      public Builder setExternalId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        externalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * External ID
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternalId() {
        
        externalId_ = getDefaultInstance().getExternalId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * External ID
       * </pre>
       *
       * <code>string externalId = 2;</code>
       * @param value The bytes for externalId to set.
       * @return This builder for chaining.
       */
      public Builder setExternalIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        externalId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:raw.PassRecordByExternalIdRequest)
    }

    // @@protoc_insertion_point(class_scope:raw.PassRecordByExternalIdRequest)
    private static final com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest();
    }

    public static com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PassRecordByExternalIdRequest>
        PARSER = new com.google.protobuf.AbstractParser<PassRecordByExternalIdRequest>() {
      @java.lang.Override
      public PassRecordByExternalIdRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PassRecordByExternalIdRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PassRecordByExternalIdRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PassRecordByExternalIdRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Raw.PassOuterClass.PassRecordByExternalIdRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListPassesByPassProjectRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:raw.ListPassesByPassProjectRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string passProjectId = 1;</code>
     * @return The passProjectId.
     */
    java.lang.String getPassProjectId();
    /**
     * <code>string passProjectId = 1;</code>
     * @return The bytes for passProjectId.
     */
    com.google.protobuf.ByteString
        getPassProjectIdBytes();

    /**
     * <code>.io.Filters filters = 2;</code>
     * @return Whether the filters field is set.
     */
    boolean hasFilters();
    /**
     * <code>.io.Filters filters = 2;</code>
     * @return The filters.
     */
    com.passkit.grpc.Filter.Filters getFilters();
    /**
     * <code>.io.Filters filters = 2;</code>
     */
    com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder();
  }
  /**
   * Protobuf type {@code raw.ListPassesByPassProjectRequest}
   */
  public static final class ListPassesByPassProjectRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:raw.ListPassesByPassProjectRequest)
      ListPassesByPassProjectRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListPassesByPassProjectRequest.newBuilder() to construct.
    private ListPassesByPassProjectRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListPassesByPassProjectRequest() {
      passProjectId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListPassesByPassProjectRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListPassesByPassProjectRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              passProjectId_ = s;
              break;
            }
            case 18: {
              com.passkit.grpc.Filter.Filters.Builder subBuilder = null;
              if (filters_ != null) {
                subBuilder = filters_.toBuilder();
              }
              filters_ = input.readMessage(com.passkit.grpc.Filter.Filters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filters_);
                filters_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassProjectRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassProjectRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.class, com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.Builder.class);
    }

    public static final int PASSPROJECTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object passProjectId_;
    /**
     * <code>string passProjectId = 1;</code>
     * @return The passProjectId.
     */
    @java.lang.Override
    public java.lang.String getPassProjectId() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        passProjectId_ = s;
        return s;
      }
    }
    /**
     * <code>string passProjectId = 1;</code>
     * @return The bytes for passProjectId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPassProjectIdBytes() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passProjectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTERS_FIELD_NUMBER = 2;
    private com.passkit.grpc.Filter.Filters filters_;
    /**
     * <code>.io.Filters filters = 2;</code>
     * @return Whether the filters field is set.
     */
    @java.lang.Override
    public boolean hasFilters() {
      return filters_ != null;
    }
    /**
     * <code>.io.Filters filters = 2;</code>
     * @return The filters.
     */
    @java.lang.Override
    public com.passkit.grpc.Filter.Filters getFilters() {
      return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
    }
    /**
     * <code>.io.Filters filters = 2;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder() {
      return getFilters();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPassProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, passProjectId_);
      }
      if (filters_ != null) {
        output.writeMessage(2, getFilters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPassProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, passProjectId_);
      }
      if (filters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFilters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest other = (com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest) obj;

      if (!getPassProjectId()
          .equals(other.getPassProjectId())) return false;
      if (hasFilters() != other.hasFilters()) return false;
      if (hasFilters()) {
        if (!getFilters()
            .equals(other.getFilters())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PASSPROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getPassProjectId().hashCode();
      if (hasFilters()) {
        hash = (37 * hash) + FILTERS_FIELD_NUMBER;
        hash = (53 * hash) + getFilters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code raw.ListPassesByPassProjectRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:raw.ListPassesByPassProjectRequest)
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassProjectRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassProjectRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.class, com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        passProjectId_ = "";

        if (filtersBuilder_ == null) {
          filters_ = null;
        } else {
          filters_ = null;
          filtersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassProjectRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest build() {
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest buildPartial() {
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest result = new com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest(this);
        result.passProjectId_ = passProjectId_;
        if (filtersBuilder_ == null) {
          result.filters_ = filters_;
        } else {
          result.filters_ = filtersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest) {
          return mergeFrom((com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest other) {
        if (other == com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest.getDefaultInstance()) return this;
        if (!other.getPassProjectId().isEmpty()) {
          passProjectId_ = other.passProjectId_;
          onChanged();
        }
        if (other.hasFilters()) {
          mergeFilters(other.getFilters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object passProjectId_ = "";
      /**
       * <code>string passProjectId = 1;</code>
       * @return The passProjectId.
       */
      public java.lang.String getPassProjectId() {
        java.lang.Object ref = passProjectId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          passProjectId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @return The bytes for passProjectId.
       */
      public com.google.protobuf.ByteString
          getPassProjectIdBytes() {
        java.lang.Object ref = passProjectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passProjectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @param value The passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        passProjectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassProjectId() {
        
        passProjectId_ = getDefaultInstance().getPassProjectId();
        onChanged();
        return this;
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @param value The bytes for passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        passProjectId_ = value;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Filter.Filters filters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder> filtersBuilder_;
      /**
       * <code>.io.Filters filters = 2;</code>
       * @return Whether the filters field is set.
       */
      public boolean hasFilters() {
        return filtersBuilder_ != null || filters_ != null;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       * @return The filters.
       */
      public com.passkit.grpc.Filter.Filters getFilters() {
        if (filtersBuilder_ == null) {
          return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
        } else {
          return filtersBuilder_.getMessage();
        }
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder setFilters(com.passkit.grpc.Filter.Filters value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filters_ = value;
          onChanged();
        } else {
          filtersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder setFilters(
          com.passkit.grpc.Filter.Filters.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          filters_ = builderForValue.build();
          onChanged();
        } else {
          filtersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder mergeFilters(com.passkit.grpc.Filter.Filters value) {
        if (filtersBuilder_ == null) {
          if (filters_ != null) {
            filters_ =
              com.passkit.grpc.Filter.Filters.newBuilder(filters_).mergeFrom(value).buildPartial();
          } else {
            filters_ = value;
          }
          onChanged();
        } else {
          filtersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder clearFilters() {
        if (filtersBuilder_ == null) {
          filters_ = null;
          onChanged();
        } else {
          filters_ = null;
          filtersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public com.passkit.grpc.Filter.Filters.Builder getFiltersBuilder() {
        
        onChanged();
        return getFiltersFieldBuilder().getBuilder();
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder() {
        if (filtersBuilder_ != null) {
          return filtersBuilder_.getMessageOrBuilder();
        } else {
          return filters_ == null ?
              com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
        }
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder> 
          getFiltersFieldBuilder() {
        if (filtersBuilder_ == null) {
          filtersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder>(
                  getFilters(),
                  getParentForChildren(),
                  isClean());
          filters_ = null;
        }
        return filtersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:raw.ListPassesByPassProjectRequest)
    }

    // @@protoc_insertion_point(class_scope:raw.ListPassesByPassProjectRequest)
    private static final com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest();
    }

    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListPassesByPassProjectRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListPassesByPassProjectRequest>() {
      @java.lang.Override
      public ListPassesByPassProjectRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListPassesByPassProjectRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListPassesByPassProjectRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListPassesByPassProjectRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassProjectRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListPassesByPassTemplateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:raw.ListPassesByPassTemplateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string passProjectId = 1;</code>
     * @return The passProjectId.
     */
    java.lang.String getPassProjectId();
    /**
     * <code>string passProjectId = 1;</code>
     * @return The bytes for passProjectId.
     */
    com.google.protobuf.ByteString
        getPassProjectIdBytes();

    /**
     * <code>.io.Filters filters = 2;</code>
     * @return Whether the filters field is set.
     */
    boolean hasFilters();
    /**
     * <code>.io.Filters filters = 2;</code>
     * @return The filters.
     */
    com.passkit.grpc.Filter.Filters getFilters();
    /**
     * <code>.io.Filters filters = 2;</code>
     */
    com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder();
  }
  /**
   * Protobuf type {@code raw.ListPassesByPassTemplateRequest}
   */
  public static final class ListPassesByPassTemplateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:raw.ListPassesByPassTemplateRequest)
      ListPassesByPassTemplateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListPassesByPassTemplateRequest.newBuilder() to construct.
    private ListPassesByPassTemplateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListPassesByPassTemplateRequest() {
      passProjectId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListPassesByPassTemplateRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListPassesByPassTemplateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              passProjectId_ = s;
              break;
            }
            case 18: {
              com.passkit.grpc.Filter.Filters.Builder subBuilder = null;
              if (filters_ != null) {
                subBuilder = filters_.toBuilder();
              }
              filters_ = input.readMessage(com.passkit.grpc.Filter.Filters.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filters_);
                filters_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassTemplateRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassTemplateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.class, com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.Builder.class);
    }

    public static final int PASSPROJECTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object passProjectId_;
    /**
     * <code>string passProjectId = 1;</code>
     * @return The passProjectId.
     */
    @java.lang.Override
    public java.lang.String getPassProjectId() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        passProjectId_ = s;
        return s;
      }
    }
    /**
     * <code>string passProjectId = 1;</code>
     * @return The bytes for passProjectId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPassProjectIdBytes() {
      java.lang.Object ref = passProjectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passProjectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTERS_FIELD_NUMBER = 2;
    private com.passkit.grpc.Filter.Filters filters_;
    /**
     * <code>.io.Filters filters = 2;</code>
     * @return Whether the filters field is set.
     */
    @java.lang.Override
    public boolean hasFilters() {
      return filters_ != null;
    }
    /**
     * <code>.io.Filters filters = 2;</code>
     * @return The filters.
     */
    @java.lang.Override
    public com.passkit.grpc.Filter.Filters getFilters() {
      return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
    }
    /**
     * <code>.io.Filters filters = 2;</code>
     */
    @java.lang.Override
    public com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder() {
      return getFilters();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPassProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, passProjectId_);
      }
      if (filters_ != null) {
        output.writeMessage(2, getFilters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPassProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, passProjectId_);
      }
      if (filters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFilters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest)) {
        return super.equals(obj);
      }
      com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest other = (com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest) obj;

      if (!getPassProjectId()
          .equals(other.getPassProjectId())) return false;
      if (hasFilters() != other.hasFilters()) return false;
      if (hasFilters()) {
        if (!getFilters()
            .equals(other.getFilters())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PASSPROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getPassProjectId().hashCode();
      if (hasFilters()) {
        hash = (37 * hash) + FILTERS_FIELD_NUMBER;
        hash = (53 * hash) + getFilters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code raw.ListPassesByPassTemplateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:raw.ListPassesByPassTemplateRequest)
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassTemplateRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassTemplateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.class, com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.Builder.class);
      }

      // Construct using com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        passProjectId_ = "";

        if (filtersBuilder_ == null) {
          filters_ = null;
        } else {
          filters_ = null;
          filtersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.passkit.grpc.Raw.PassOuterClass.internal_static_raw_ListPassesByPassTemplateRequest_descriptor;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest getDefaultInstanceForType() {
        return com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest build() {
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest buildPartial() {
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest result = new com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest(this);
        result.passProjectId_ = passProjectId_;
        if (filtersBuilder_ == null) {
          result.filters_ = filters_;
        } else {
          result.filters_ = filtersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest) {
          return mergeFrom((com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest other) {
        if (other == com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest.getDefaultInstance()) return this;
        if (!other.getPassProjectId().isEmpty()) {
          passProjectId_ = other.passProjectId_;
          onChanged();
        }
        if (other.hasFilters()) {
          mergeFilters(other.getFilters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object passProjectId_ = "";
      /**
       * <code>string passProjectId = 1;</code>
       * @return The passProjectId.
       */
      public java.lang.String getPassProjectId() {
        java.lang.Object ref = passProjectId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          passProjectId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @return The bytes for passProjectId.
       */
      public com.google.protobuf.ByteString
          getPassProjectIdBytes() {
        java.lang.Object ref = passProjectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passProjectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @param value The passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        passProjectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassProjectId() {
        
        passProjectId_ = getDefaultInstance().getPassProjectId();
        onChanged();
        return this;
      }
      /**
       * <code>string passProjectId = 1;</code>
       * @param value The bytes for passProjectId to set.
       * @return This builder for chaining.
       */
      public Builder setPassProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        passProjectId_ = value;
        onChanged();
        return this;
      }

      private com.passkit.grpc.Filter.Filters filters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder> filtersBuilder_;
      /**
       * <code>.io.Filters filters = 2;</code>
       * @return Whether the filters field is set.
       */
      public boolean hasFilters() {
        return filtersBuilder_ != null || filters_ != null;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       * @return The filters.
       */
      public com.passkit.grpc.Filter.Filters getFilters() {
        if (filtersBuilder_ == null) {
          return filters_ == null ? com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
        } else {
          return filtersBuilder_.getMessage();
        }
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder setFilters(com.passkit.grpc.Filter.Filters value) {
        if (filtersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filters_ = value;
          onChanged();
        } else {
          filtersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder setFilters(
          com.passkit.grpc.Filter.Filters.Builder builderForValue) {
        if (filtersBuilder_ == null) {
          filters_ = builderForValue.build();
          onChanged();
        } else {
          filtersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder mergeFilters(com.passkit.grpc.Filter.Filters value) {
        if (filtersBuilder_ == null) {
          if (filters_ != null) {
            filters_ =
              com.passkit.grpc.Filter.Filters.newBuilder(filters_).mergeFrom(value).buildPartial();
          } else {
            filters_ = value;
          }
          onChanged();
        } else {
          filtersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public Builder clearFilters() {
        if (filtersBuilder_ == null) {
          filters_ = null;
          onChanged();
        } else {
          filters_ = null;
          filtersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public com.passkit.grpc.Filter.Filters.Builder getFiltersBuilder() {
        
        onChanged();
        return getFiltersFieldBuilder().getBuilder();
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      public com.passkit.grpc.Filter.FiltersOrBuilder getFiltersOrBuilder() {
        if (filtersBuilder_ != null) {
          return filtersBuilder_.getMessageOrBuilder();
        } else {
          return filters_ == null ?
              com.passkit.grpc.Filter.Filters.getDefaultInstance() : filters_;
        }
      }
      /**
       * <code>.io.Filters filters = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder> 
          getFiltersFieldBuilder() {
        if (filtersBuilder_ == null) {
          filtersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.passkit.grpc.Filter.Filters, com.passkit.grpc.Filter.Filters.Builder, com.passkit.grpc.Filter.FiltersOrBuilder>(
                  getFilters(),
                  getParentForChildren(),
                  isClean());
          filters_ = null;
        }
        return filtersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:raw.ListPassesByPassTemplateRequest)
    }

    // @@protoc_insertion_point(class_scope:raw.ListPassesByPassTemplateRequest)
    private static final com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest();
    }

    public static com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListPassesByPassTemplateRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListPassesByPassTemplateRequest>() {
      @java.lang.Override
      public ListPassesByPassTemplateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListPassesByPassTemplateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListPassesByPassTemplateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListPassesByPassTemplateRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.passkit.grpc.Raw.PassOuterClass.ListPassesByPassTemplateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_raw_Pass_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_raw_Pass_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_raw_Pass_DynamicDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_raw_Pass_DynamicDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_raw_PassRecordByExternalIdRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_raw_PassRecordByExternalIdRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_raw_ListPassesByPassProjectRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_raw_ListPassesByPassProjectRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_raw_ListPassesByPassTemplateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_raw_ListPassesByPassTemplateRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021io/raw/pass.proto\022\003raw\032\037google/protobu" +
      "f/timestamp.proto\032\027io/common/metrics.pro" +
      "to\032\026io/common/filter.proto\032\024io/common/pa" +
      "ss.proto\032\030io/common/personal.proto\032.prot" +
      "oc-gen-openapiv2/options/annotations.pro" +
      "to\"\307\005\n\004Pass\022\n\n\002id\030\001 \001(\t\022\022\n\nexternalId\030\002 " +
      "\001(\t\022\025\n\rpassProjectId\030\003 \001(\t\022\026\n\016passTempla" +
      "teId\030\004 \001(\t\022#\n\017personalDetails\030\005 \001(\0132\n.io" +
      ".Person\022/\n\013dynamicData\030\006 \003(\0132\032.raw.Pass." +
      "DynamicDataEntry\022\016\n\006optOut\030\010 \001(\010\022\020\n\010isVo" +
      "ided\030\t \001(\010\0222\n\016invalidateDate\030\n \001(\0132\032.goo" +
      "gle.protobuf.Timestamp\022.\n\nexpiryDate\030\013 \001" +
      "(\0132\032.google.protobuf.Timestamp\022$\n\013passOp" +
      "tions\030\014 \001(\0132\017.io.PassOptions\022(\n\rpassOver" +
      "rides\030\r \001(\0132\021.io.PassOverrides\022\"\n\014passMe" +
      "taData\030\016 \001(\0132\014.io.Metadata\022+\n\007created\030\017 " +
      "\001(\0132\032.google.protobuf.Timestamp\022+\n\007updat" +
      "ed\030\020 \001(\0132\032.google.protobuf.Timestamp\0322\n\020" +
      "DynamicDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002" +
      " \001(\t:\0028\001:\221\001\222A\215\001\n\212\001*\004Pass2aPass contains " +
      "dynamic information that combined with a" +
      " Pass Project & Template results in a pa" +
      "ss.\322\001\rpassProjectId\322\001\016passTemplateId\"J\n\035" +
      "PassRecordByExternalIdRequest\022\025\n\rpassPro" +
      "jectId\030\001 \001(\t\022\022\n\nexternalId\030\002 \001(\t\"U\n\036List" +
      "PassesByPassProjectRequest\022\025\n\rpassProjec" +
      "tId\030\001 \001(\t\022\034\n\007filters\030\002 \001(\0132\013.io.Filters\"" +
      "V\n\037ListPassesByPassTemplateRequest\022\025\n\rpa" +
      "ssProjectId\030\001 \001(\t\022\034\n\007filters\030\002 \001(\0132\013.io." +
      "FiltersBS\n\024com.passkit.grpc.RawZ(stash.p" +
      "asskit.com/io/model/sdk/go/io/raw\252\002\020Pass" +
      "Kit.Grpc.Rawb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.passkit.grpc.MetricsOuterClass.getDescriptor(),
          com.passkit.grpc.Filter.getDescriptor(),
          com.passkit.grpc.PassOuterClass.getDescriptor(),
          com.passkit.grpc.Personal.getDescriptor(),
          grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor(),
        });
    internal_static_raw_Pass_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_raw_Pass_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_raw_Pass_descriptor,
        new java.lang.String[] { "Id", "ExternalId", "PassProjectId", "PassTemplateId", "PersonalDetails", "DynamicData", "OptOut", "IsVoided", "InvalidateDate", "ExpiryDate", "PassOptions", "PassOverrides", "PassMetaData", "Created", "Updated", });
    internal_static_raw_Pass_DynamicDataEntry_descriptor =
      internal_static_raw_Pass_descriptor.getNestedTypes().get(0);
    internal_static_raw_Pass_DynamicDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_raw_Pass_DynamicDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_raw_PassRecordByExternalIdRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_raw_PassRecordByExternalIdRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_raw_PassRecordByExternalIdRequest_descriptor,
        new java.lang.String[] { "PassProjectId", "ExternalId", });
    internal_static_raw_ListPassesByPassProjectRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_raw_ListPassesByPassProjectRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_raw_ListPassesByPassProjectRequest_descriptor,
        new java.lang.String[] { "PassProjectId", "Filters", });
    internal_static_raw_ListPassesByPassTemplateRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_raw_ListPassesByPassTemplateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_raw_ListPassesByPassTemplateRequest_descriptor,
        new java.lang.String[] { "PassProjectId", "Filters", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_openapiv2.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.TimestampProto.getDescriptor();
    com.passkit.grpc.MetricsOuterClass.getDescriptor();
    com.passkit.grpc.Filter.getDescriptor();
    com.passkit.grpc.PassOuterClass.getDescriptor();
    com.passkit.grpc.Personal.getDescriptor();
    grpc.gateway.protoc_gen_openapiv2.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
